{"ast":null,"code":"import { isObject, isTypeof } from 'utils/checker';\nexport const resetPasswordInitState = {\n  isEncrypt: true,\n  newPassword: '',\n  confirmPassword: '',\n  passwordStrength: 0,\n  isMatched: false,\n  authRequest: 'pending',\n  resetRequest: 'pending',\n  messageRequest: '',\n  email: '',\n  token: ''\n};\nexport default function resetPassword(state = resetPasswordInitState, action) {\n  switch (action.type) {\n    case 'set':\n      return {\n        isEncrypt: isTypeof('boolean', action.isEncrypt, state.isEncrypt),\n        isMatched: isTypeof('boolean', action.isMatched, state.isMatched),\n        newPassword: isTypeof('string', action.newPassword, state.newPassword),\n        messageRequest: isTypeof('string', action.messageRequest, state.messageRequest),\n        email: isTypeof('string', action.email, state.email),\n        token: isTypeof('string', action.token, state.token),\n        passwordStrength: isTypeof('number', action.passwordStrength, state.passwordStrength),\n        confirmPassword: isTypeof('string', action.confirmPassword, state.confirmPassword),\n        authRequest: isTypeof('string', action.authRequest, state.authRequest),\n        resetRequest: isTypeof('string', action.resetRequest, state.resetRequest)\n      };\n\n    case 'clear':\n      return resetPasswordInitState;\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["C:/Users/Makaru/Documents/React Project/broowingcoffee-web-server/src/hooks/resetPassword.js"],"names":["isObject","isTypeof","resetPasswordInitState","isEncrypt","newPassword","confirmPassword","passwordStrength","isMatched","authRequest","resetRequest","messageRequest","email","token","resetPassword","state","action","type"],"mappings":"AAAA,SAAQA,QAAR,EAAkBC,QAAlB,QAAiC,eAAjC;AAEA,OAAO,MAAMC,sBAAsB,GAAG;AACpCC,EAAAA,SAAS,EAAE,IADyB;AAEpCC,EAAAA,WAAW,EAAE,EAFuB;AAGpCC,EAAAA,eAAe,EAAE,EAHmB;AAIpCC,EAAAA,gBAAgB,EAAE,CAJkB;AAKpCC,EAAAA,SAAS,EAAE,KALyB;AAMpCC,EAAAA,WAAW,EAAE,SANuB;AAOpCC,EAAAA,YAAY,EAAE,SAPsB;AAQpCC,EAAAA,cAAc,EAAE,EARoB;AASpCC,EAAAA,KAAK,EAAE,EAT6B;AAUpCC,EAAAA,KAAK,EAAE;AAV6B,CAA/B;AAaP,eAAe,SAASC,aAAT,CAAuBC,KAAK,GAAGZ,sBAA/B,EAAuDa,MAAvD,EAA+D;AAC5E,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,KAAL;AACE,aAAO;AACLb,QAAAA,SAAS,EAAEF,QAAQ,CAAC,SAAD,EAAYc,MAAM,CAACZ,SAAnB,EAA8BW,KAAK,CAACX,SAApC,CADd;AAELI,QAAAA,SAAS,EAAEN,QAAQ,CAAC,SAAD,EAAYc,MAAM,CAACR,SAAnB,EAA8BO,KAAK,CAACP,SAApC,CAFd;AAGLH,QAAAA,WAAW,EAAEH,QAAQ,CAAC,QAAD,EAAWc,MAAM,CAACX,WAAlB,EAA+BU,KAAK,CAACV,WAArC,CAHhB;AAILM,QAAAA,cAAc,EAAET,QAAQ,CAAC,QAAD,EAAWc,MAAM,CAACL,cAAlB,EAAkCI,KAAK,CAACJ,cAAxC,CAJnB;AAKLC,QAAAA,KAAK,EAAEV,QAAQ,CAAC,QAAD,EAAWc,MAAM,CAACJ,KAAlB,EAAyBG,KAAK,CAACH,KAA/B,CALV;AAMLC,QAAAA,KAAK,EAAEX,QAAQ,CAAC,QAAD,EAAWc,MAAM,CAACH,KAAlB,EAAyBE,KAAK,CAACF,KAA/B,CANV;AAOLN,QAAAA,gBAAgB,EAAEL,QAAQ,CACxB,QADwB,EAExBc,MAAM,CAACT,gBAFiB,EAGxBQ,KAAK,CAACR,gBAHkB,CAPrB;AAYLD,QAAAA,eAAe,EAAEJ,QAAQ,CACvB,QADuB,EAEvBc,MAAM,CAACV,eAFgB,EAGvBS,KAAK,CAACT,eAHiB,CAZpB;AAiBLG,QAAAA,WAAW,EAAEP,QAAQ,CAAC,QAAD,EAAWc,MAAM,CAACP,WAAlB,EAA+BM,KAAK,CAACN,WAArC,CAjBhB;AAkBLC,QAAAA,YAAY,EAAER,QAAQ,CAAC,QAAD,EAAWc,MAAM,CAACN,YAAlB,EAAgCK,KAAK,CAACL,YAAtC;AAlBjB,OAAP;;AAqBF,SAAK,OAAL;AACE,aAAOP,sBAAP;;AAEF;AACE,aAAOY,KAAP;AA3BJ;AA6BD","sourcesContent":["import {isObject, isTypeof} from 'utils/checker';\r\n\r\nexport const resetPasswordInitState = {\r\n  isEncrypt: true,\r\n  newPassword: '',\r\n  confirmPassword: '',\r\n  passwordStrength: 0,\r\n  isMatched: false,\r\n  authRequest: 'pending',\r\n  resetRequest: 'pending',\r\n  messageRequest: '',\r\n  email: '',\r\n  token: '',\r\n};\r\n\r\nexport default function resetPassword(state = resetPasswordInitState, action) {\r\n  switch (action.type) {\r\n    case 'set':\r\n      return {\r\n        isEncrypt: isTypeof('boolean', action.isEncrypt, state.isEncrypt),\r\n        isMatched: isTypeof('boolean', action.isMatched, state.isMatched),\r\n        newPassword: isTypeof('string', action.newPassword, state.newPassword),\r\n        messageRequest: isTypeof('string', action.messageRequest, state.messageRequest),\r\n        email: isTypeof('string', action.email, state.email),\r\n        token: isTypeof('string', action.token, state.token),\r\n        passwordStrength: isTypeof(\r\n          'number',\r\n          action.passwordStrength,\r\n          state.passwordStrength,\r\n        ),\r\n        confirmPassword: isTypeof(\r\n          'string',\r\n          action.confirmPassword,\r\n          state.confirmPassword,\r\n        ),\r\n        authRequest: isTypeof('string', action.authRequest, state.authRequest),\r\n        resetRequest: isTypeof('string', action.resetRequest, state.resetRequest),\r\n      };\r\n\r\n    case 'clear':\r\n      return resetPasswordInitState;\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}