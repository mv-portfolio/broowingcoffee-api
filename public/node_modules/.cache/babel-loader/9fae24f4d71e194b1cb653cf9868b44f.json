{"ast":null,"code":"import { isObject, isTypeof } from 'utils/checker';\nexport const resetPasswordInitState = {\n  isEncrypt: true,\n  newPassword: '',\n  confirmPassword: '',\n  passwordStrength: 0,\n  isMatched: false,\n  request: 'pending'\n};\nexport default function resetPassword(state = resetPasswordInitState, action) {\n  switch (action.type) {\n    case 'set':\n      return {\n        isEncrypt: isTypeof('boolean', action.isEncrypt, state.isEncrypt),\n        isMatched: isTypeof('boolean', action.isMatched, state.isMatched),\n        newPassword: isTypeof('string', action.newPassword, state.newPassword),\n        passwordStrength: isTypeof('number', action.passwordStrength, state.passwordStrength),\n        confirmPassword: isTypeof('string', action.confirmPassword, state.confirmPassword),\n        request: isTypeof('string', action.request, state.request)\n      };\n\n    case 'clear':\n      return resetPasswordInitState;\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["C:/Users/Makaru/Documents/React Project/broowingcoffee-web-server/src/hooks/resetPassword.js"],"names":["isObject","isTypeof","resetPasswordInitState","isEncrypt","newPassword","confirmPassword","passwordStrength","isMatched","request","resetPassword","state","action","type"],"mappings":"AAAA,SAAQA,QAAR,EAAkBC,QAAlB,QAAiC,eAAjC;AAEA,OAAO,MAAMC,sBAAsB,GAAG;AACpCC,EAAAA,SAAS,EAAE,IADyB;AAEpCC,EAAAA,WAAW,EAAE,EAFuB;AAGpCC,EAAAA,eAAe,EAAE,EAHmB;AAIpCC,EAAAA,gBAAgB,EAAE,CAJkB;AAKpCC,EAAAA,SAAS,EAAE,KALyB;AAMpCC,EAAAA,OAAO,EAAE;AAN2B,CAA/B;AASP,eAAe,SAASC,aAAT,CAAuBC,KAAK,GAAGR,sBAA/B,EAAuDS,MAAvD,EAA+D;AAC5E,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,KAAL;AACE,aAAO;AACLT,QAAAA,SAAS,EAAEF,QAAQ,CAAC,SAAD,EAAYU,MAAM,CAACR,SAAnB,EAA8BO,KAAK,CAACP,SAApC,CADd;AAELI,QAAAA,SAAS,EAAEN,QAAQ,CAAC,SAAD,EAAYU,MAAM,CAACJ,SAAnB,EAA8BG,KAAK,CAACH,SAApC,CAFd;AAGLH,QAAAA,WAAW,EAAEH,QAAQ,CAAC,QAAD,EAAWU,MAAM,CAACP,WAAlB,EAA+BM,KAAK,CAACN,WAArC,CAHhB;AAILE,QAAAA,gBAAgB,EAAEL,QAAQ,CACxB,QADwB,EAExBU,MAAM,CAACL,gBAFiB,EAGxBI,KAAK,CAACJ,gBAHkB,CAJrB;AASLD,QAAAA,eAAe,EAAEJ,QAAQ,CACvB,QADuB,EAEvBU,MAAM,CAACN,eAFgB,EAGvBK,KAAK,CAACL,eAHiB,CATpB;AAcLG,QAAAA,OAAO,EAAEP,QAAQ,CAAC,QAAD,EAAWU,MAAM,CAACH,OAAlB,EAA2BE,KAAK,CAACF,OAAjC;AAdZ,OAAP;;AAiBF,SAAK,OAAL;AACE,aAAON,sBAAP;;AAEF;AACE,aAAOQ,KAAP;AAvBJ;AAyBD","sourcesContent":["import {isObject, isTypeof} from 'utils/checker';\r\n\r\nexport const resetPasswordInitState = {\r\n  isEncrypt: true,\r\n  newPassword: '',\r\n  confirmPassword: '',\r\n  passwordStrength: 0,\r\n  isMatched: false,\r\n  request: 'pending',\r\n};\r\n\r\nexport default function resetPassword(state = resetPasswordInitState, action) {\r\n  switch (action.type) {\r\n    case 'set':\r\n      return {\r\n        isEncrypt: isTypeof('boolean', action.isEncrypt, state.isEncrypt),\r\n        isMatched: isTypeof('boolean', action.isMatched, state.isMatched),\r\n        newPassword: isTypeof('string', action.newPassword, state.newPassword),\r\n        passwordStrength: isTypeof(\r\n          'number',\r\n          action.passwordStrength,\r\n          state.passwordStrength,\r\n        ),\r\n        confirmPassword: isTypeof(\r\n          'string',\r\n          action.confirmPassword,\r\n          state.confirmPassword,\r\n        ),\r\n        request: isTypeof('string', action.request, state.request),\r\n      };\r\n\r\n    case 'clear':\r\n      return resetPasswordInitState;\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}