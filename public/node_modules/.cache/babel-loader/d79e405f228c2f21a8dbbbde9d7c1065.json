{"ast":null,"code":"import { isObject, isTypeof } from 'utils/checker';\nexport const resetPasswordInitState = {\n  encryptInput1: true,\n  encryptInput2: true,\n  newPassword: '',\n  confirmPassword: '',\n  request: 'pending'\n};\nexport default function resetPassword(state = resetPasswordInitState, action) {\n  switch (action.type) {\n    case 'set':\n      return {\n        encryptInput1: isTypeof('boolean', action.encrypt.input1, state.encrypt.input1),\n        encryptinput2: isTypeof('boolean', action.encrypt.input2, state.encrypt.input2),\n        newPassword: isTypeof('string', action.newPassword, state.newPassword),\n        confirmPassword: isTypeof('string', action.confirmPassword, state.confirmPassword),\n        request: isTypeof('string', action.request, state.request)\n      };\n\n    case 'clear':\n      return resetPasswordInitState;\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["C:/Users/Makaru/Documents/React Project/broowingcoffee-web-server/src/hooks/resetPassword.js"],"names":["isObject","isTypeof","resetPasswordInitState","encryptInput1","encryptInput2","newPassword","confirmPassword","request","resetPassword","state","action","type","encrypt","input1","encryptinput2","input2"],"mappings":"AAAA,SAAQA,QAAR,EAAkBC,QAAlB,QAAiC,eAAjC;AAEA,OAAO,MAAMC,sBAAsB,GAAG;AACpCC,EAAAA,aAAa,EAAE,IADqB;AAEpCC,EAAAA,aAAa,EAAE,IAFqB;AAGpCC,EAAAA,WAAW,EAAE,EAHuB;AAIpCC,EAAAA,eAAe,EAAE,EAJmB;AAKpCC,EAAAA,OAAO,EAAE;AAL2B,CAA/B;AAQP,eAAe,SAASC,aAAT,CAAuBC,KAAK,GAAGP,sBAA/B,EAAuDQ,MAAvD,EAA+D;AAC5E,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,KAAL;AACE,aAAO;AACLR,QAAAA,aAAa,EAAEF,QAAQ,CAAC,SAAD,EAAYS,MAAM,CAACE,OAAP,CAAeC,MAA3B,EAAmCJ,KAAK,CAACG,OAAN,CAAcC,MAAjD,CADlB;AAELC,QAAAA,aAAa,EAAEb,QAAQ,CAAC,SAAD,EAAYS,MAAM,CAACE,OAAP,CAAeG,MAA3B,EAAmCN,KAAK,CAACG,OAAN,CAAcG,MAAjD,CAFlB;AAGLV,QAAAA,WAAW,EAAEJ,QAAQ,CAAC,QAAD,EAAWS,MAAM,CAACL,WAAlB,EAA+BI,KAAK,CAACJ,WAArC,CAHhB;AAILC,QAAAA,eAAe,EAAEL,QAAQ,CACvB,QADuB,EAEvBS,MAAM,CAACJ,eAFgB,EAGvBG,KAAK,CAACH,eAHiB,CAJpB;AASLC,QAAAA,OAAO,EAAEN,QAAQ,CAAC,QAAD,EAAWS,MAAM,CAACH,OAAlB,EAA2BE,KAAK,CAACF,OAAjC;AATZ,OAAP;;AAYF,SAAK,OAAL;AACE,aAAOL,sBAAP;;AAEF;AACE,aAAOO,KAAP;AAlBJ;AAoBD","sourcesContent":["import {isObject, isTypeof} from 'utils/checker';\r\n\r\nexport const resetPasswordInitState = {\r\n  encryptInput1: true,\r\n  encryptInput2: true,\r\n  newPassword: '',\r\n  confirmPassword: '',\r\n  request: 'pending',\r\n};\r\n\r\nexport default function resetPassword(state = resetPasswordInitState, action) {\r\n  switch (action.type) {\r\n    case 'set':\r\n      return {\r\n        encryptInput1: isTypeof('boolean', action.encrypt.input1, state.encrypt.input1),\r\n        encryptinput2: isTypeof('boolean', action.encrypt.input2, state.encrypt.input2),\r\n        newPassword: isTypeof('string', action.newPassword, state.newPassword),\r\n        confirmPassword: isTypeof(\r\n          'string',\r\n          action.confirmPassword,\r\n          state.confirmPassword,\r\n        ),\r\n        request: isTypeof('string', action.request, state.request),\r\n      };\r\n\r\n    case 'clear':\r\n      return resetPasswordInitState;\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}