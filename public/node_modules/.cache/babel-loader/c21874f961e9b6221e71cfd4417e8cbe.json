{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Makaru\\\\Documents\\\\React Project\\\\broowingcoffee-web-server\\\\src\\\\components\\\\Dropdown\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport { Button, Icon, Separator, Text, View } from 'components';\nimport styles from './.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Dropdown({\n  items = [],\n  style,\n  placeholder,\n  backgroundColor,\n  accentColor,\n  selected,\n  onSelected\n}) {\n  _s();\n\n  const [state, setState] = useState({\n    isShow: false,\n    value: selected || ''\n  });\n\n  const onClick = (actionType, value) => {\n    if (actionType === 'on-click') {\n      setState(prev => ({ ...prev,\n        isShow: !prev.isShow\n      }));\n      return;\n    }\n\n    if (actionType === 'on-select') {\n      onSelected(value);\n      setState({\n        isShow: false,\n        value: value\n      });\n      return;\n    }\n  };\n\n  const getIcon = isShow => {\n    if (isShow) {\n      return /*#__PURE__*/_jsxDEV(Icon, {\n        font: \"AntDesign\",\n        name: \"caretup\",\n        color: accentColor,\n        size: \"2vh\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 14\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(Icon, {\n      font: \"AntDesign\",\n      name: \"caretdown\",\n      color: accentColor,\n      size: \"2vh\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 12\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(View, {\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      style: style,\n      onClick: () => onClick('on-click'),\n      children: /*#__PURE__*/_jsxDEV(View, {\n        style: `${styles.mainPane} ${style}`,\n        defaultStyle: {\n          backgroundColor\n        },\n        children: [/*#__PURE__*/_jsxDEV(Text, {\n          style: styles.title,\n          children: state.value || /*#__PURE__*/_jsxDEV(\"span\", {\n            className: styles.placeholder,\n            children: placeholder || 'Select...'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this), getIcon(state.isShow)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), state.isShow && /*#__PURE__*/_jsxDEV(View, {\n      style: styles.pickerList,\n      children: items.filter(type => type !== state.value).map((type, index) => /*#__PURE__*/_jsxDEV(View, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          title: type,\n          style: styles.pickerItem,\n          onClick: () => onClick('on-select', type)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 17\n        }, this), index + 1 !== items.filter(type => type !== state.value).length ? /*#__PURE__*/_jsxDEV(Separator, {\n          vertical: 0.25\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 19\n        }, this) : null]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 15\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Dropdown, \"FePYTPz7D42etM+6oaF8/D9YsTg=\");\n\n_c = Dropdown;\n\nvar _c;\n\n$RefreshReg$(_c, \"Dropdown\");","map":{"version":3,"sources":["C:/Users/Makaru/Documents/React Project/broowingcoffee-web-server/src/components/Dropdown/index.js"],"names":["useState","Button","Icon","Separator","Text","View","styles","Dropdown","items","style","placeholder","backgroundColor","accentColor","selected","onSelected","state","setState","isShow","value","onClick","actionType","prev","getIcon","mainPane","title","pickerList","filter","type","map","index","pickerItem","length"],"mappings":"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","sourcesContent":["import {useState} from 'react';\r\nimport {Button, Icon, Separator, Text, View} from 'components';\r\nimport styles from './.module.css';\r\n\r\nexport default function Dropdown({\r\n  items = [],\r\n  style,\r\n  placeholder,\r\n  backgroundColor,\r\n  accentColor,\r\n  selected,\r\n  onSelected,\r\n}) {\r\n  const [state, setState] = useState({\r\n    isShow: false,\r\n    value: selected || '',\r\n  });\r\n\r\n  const onClick = (actionType, value) => {\r\n    if (actionType === 'on-click') {\r\n      setState(prev => ({...prev, isShow: !prev.isShow}));\r\n      return;\r\n    }\r\n    if (actionType === 'on-select') {\r\n      onSelected(value);\r\n      setState({\r\n        isShow: false,\r\n        value: value,\r\n      });\r\n      return;\r\n    }\r\n  };\r\n  const getIcon = isShow => {\r\n    if (isShow) {\r\n      return <Icon font='AntDesign' name='caretup' color={accentColor} size='2vh' />;\r\n    }\r\n    return <Icon font='AntDesign' name='caretdown' color={accentColor} size='2vh' />;\r\n  };\r\n\r\n  return (\r\n    <View>\r\n      <Button style={style} onClick={() => onClick('on-click')}>\r\n        <View style={`${styles.mainPane} ${style}`} defaultStyle={{backgroundColor}}>\r\n          <Text style={styles.title}>\r\n            {state.value || (\r\n              <span className={styles.placeholder}>{placeholder || 'Select...'}</span>\r\n            )}\r\n          </Text>\r\n          {getIcon(state.isShow)}\r\n        </View>\r\n      </Button>\r\n      {state.isShow && (\r\n        <View style={styles.pickerList}>\r\n          {items\r\n            .filter(type => type !== state.value)\r\n            .map((type, index) => (\r\n              <View key={index}>\r\n                <Button\r\n                  title={type}\r\n                  style={styles.pickerItem}\r\n                  onClick={() => onClick('on-select', type)}\r\n                />\r\n                {index + 1 !== items.filter(type => type !== state.value).length ? (\r\n                  <Separator vertical={0.25} />\r\n                ) : null}\r\n              </View>\r\n            ))}\r\n        </View>\r\n      )}\r\n    </View>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}