{"ast":null,"code":"import{isObject,isTypeof}from'utils/checker';export var resetPasswordInitState={isEncrypt:true,isLoading:false,newPassword:'',confirmPassword:'',passwordStrength:0,isMatched:false,authRequest:'pending',resetRequest:'pending',messageRequest:'',email:'',token:''};export default function resetPassword(){var state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:resetPasswordInitState;var action=arguments.length>1?arguments[1]:undefined;switch(action.type){case'set':return{isEncrypt:isTypeof('boolean',action.isEncrypt,state.isEncrypt),isMatched:isTypeof('boolean',action.isMatched,state.isMatched),isLoading:isTypeof('boolean',action.isLoading,state.isLoading),newPassword:isTypeof('string',action.newPassword,state.newPassword),messageRequest:isTypeof('string',action.messageRequest,state.messageRequest),email:isTypeof('string',action.email,state.email),token:isTypeof('string',action.token,state.token),passwordStrength:isTypeof('number',action.passwordStrength,state.passwordStrength),confirmPassword:isTypeof('string',action.confirmPassword,state.confirmPassword),authRequest:isTypeof('string',action.authRequest,state.authRequest),resetRequest:isTypeof('string',action.resetRequest,state.resetRequest)};case'clear':return resetPasswordInitState;default:return state;}}","map":{"version":3,"sources":["C:/Users/Makaru/Documents/React Project/broowingcoffee-web-server/src/hooks/resetPassword.js"],"names":["isObject","isTypeof","resetPasswordInitState","isEncrypt","isLoading","newPassword","confirmPassword","passwordStrength","isMatched","authRequest","resetRequest","messageRequest","email","token","resetPassword","state","action","type"],"mappings":"AAAA,OAAQA,QAAR,CAAkBC,QAAlB,KAAiC,eAAjC,CAEA,MAAO,IAAMC,CAAAA,sBAAsB,CAAG,CACpCC,SAAS,CAAE,IADyB,CAEpCC,SAAS,CAAE,KAFyB,CAGpCC,WAAW,CAAE,EAHuB,CAIpCC,eAAe,CAAE,EAJmB,CAKpCC,gBAAgB,CAAE,CALkB,CAMpCC,SAAS,CAAE,KANyB,CAOpCC,WAAW,CAAE,SAPuB,CAQpCC,YAAY,CAAE,SARsB,CASpCC,cAAc,CAAE,EAToB,CAUpCC,KAAK,CAAE,EAV6B,CAWpCC,KAAK,CAAE,EAX6B,CAA/B,CAcP,cAAe,SAASC,CAAAA,aAAT,EAA+D,IAAxCC,CAAAA,KAAwC,2DAAhCb,sBAAgC,IAARc,CAAAA,MAAQ,2CAC5E,OAAQA,MAAM,CAACC,IAAf,EACE,IAAK,KAAL,CACE,MAAO,CACLd,SAAS,CAAEF,QAAQ,CAAC,SAAD,CAAYe,MAAM,CAACb,SAAnB,CAA8BY,KAAK,CAACZ,SAApC,CADd,CAELK,SAAS,CAAEP,QAAQ,CAAC,SAAD,CAAYe,MAAM,CAACR,SAAnB,CAA8BO,KAAK,CAACP,SAApC,CAFd,CAGLJ,SAAS,CAAEH,QAAQ,CAAC,SAAD,CAAYe,MAAM,CAACZ,SAAnB,CAA8BW,KAAK,CAACX,SAApC,CAHd,CAILC,WAAW,CAAEJ,QAAQ,CAAC,QAAD,CAAWe,MAAM,CAACX,WAAlB,CAA+BU,KAAK,CAACV,WAArC,CAJhB,CAKLM,cAAc,CAAEV,QAAQ,CAAC,QAAD,CAAWe,MAAM,CAACL,cAAlB,CAAkCI,KAAK,CAACJ,cAAxC,CALnB,CAMLC,KAAK,CAAEX,QAAQ,CAAC,QAAD,CAAWe,MAAM,CAACJ,KAAlB,CAAyBG,KAAK,CAACH,KAA/B,CANV,CAOLC,KAAK,CAAEZ,QAAQ,CAAC,QAAD,CAAWe,MAAM,CAACH,KAAlB,CAAyBE,KAAK,CAACF,KAA/B,CAPV,CAQLN,gBAAgB,CAAEN,QAAQ,CACxB,QADwB,CAExBe,MAAM,CAACT,gBAFiB,CAGxBQ,KAAK,CAACR,gBAHkB,CARrB,CAaLD,eAAe,CAAEL,QAAQ,CACvB,QADuB,CAEvBe,MAAM,CAACV,eAFgB,CAGvBS,KAAK,CAACT,eAHiB,CAbpB,CAkBLG,WAAW,CAAER,QAAQ,CAAC,QAAD,CAAWe,MAAM,CAACP,WAAlB,CAA+BM,KAAK,CAACN,WAArC,CAlBhB,CAmBLC,YAAY,CAAET,QAAQ,CAAC,QAAD,CAAWe,MAAM,CAACN,YAAlB,CAAgCK,KAAK,CAACL,YAAtC,CAnBjB,CAAP,CAsBF,IAAK,OAAL,CACE,MAAOR,CAAAA,sBAAP,CAEF,QACE,MAAOa,CAAAA,KAAP,CA5BJ,CA8BD","sourcesContent":["import {isObject, isTypeof} from 'utils/checker';\r\n\r\nexport const resetPasswordInitState = {\r\n  isEncrypt: true,\r\n  isLoading: false,\r\n  newPassword: '',\r\n  confirmPassword: '',\r\n  passwordStrength: 0,\r\n  isMatched: false,\r\n  authRequest: 'pending',\r\n  resetRequest: 'pending',\r\n  messageRequest: '',\r\n  email: '',\r\n  token: '',\r\n};\r\n\r\nexport default function resetPassword(state = resetPasswordInitState, action) {\r\n  switch (action.type) {\r\n    case 'set':\r\n      return {\r\n        isEncrypt: isTypeof('boolean', action.isEncrypt, state.isEncrypt),\r\n        isMatched: isTypeof('boolean', action.isMatched, state.isMatched),\r\n        isLoading: isTypeof('boolean', action.isLoading, state.isLoading),\r\n        newPassword: isTypeof('string', action.newPassword, state.newPassword),\r\n        messageRequest: isTypeof('string', action.messageRequest, state.messageRequest),\r\n        email: isTypeof('string', action.email, state.email),\r\n        token: isTypeof('string', action.token, state.token),\r\n        passwordStrength: isTypeof(\r\n          'number',\r\n          action.passwordStrength,\r\n          state.passwordStrength,\r\n        ),\r\n        confirmPassword: isTypeof(\r\n          'string',\r\n          action.confirmPassword,\r\n          state.confirmPassword,\r\n        ),\r\n        authRequest: isTypeof('string', action.authRequest, state.authRequest),\r\n        resetRequest: isTypeof('string', action.resetRequest, state.resetRequest),\r\n      };\r\n\r\n    case 'clear':\r\n      return resetPasswordInitState;\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}