{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Makaru\\\\Documents\\\\React Project\\\\broowingcoffee-web-server\\\\src\\\\pages\\\\ResetPassword\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport { ErrorPage, LoadingPage } from 'pages';\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router';\nimport { SECRET_KEY, SERVER } from 'utils/env';\nimport { Text, TextInput, View } from 'components';\nimport styles from './.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function HomePage() {\n  _s();\n\n  const {\n    token\n  } = useParams();\n  const [request, setRequest] = useState('pending');\n  useEffect(() => {\n    fetch(`${SERVER}/${SECRET_KEY}/api/service/reset-password-auth`, {\n      headers: {\n        'reset-auth-token': token\n      }\n    }).then(res => res.json()).then(res => {\n      if (!res.status) {\n        setRequest('failed');\n        return;\n      }\n\n      setRequest('success');\n    });\n  }, []);\n\n  if (request === 'success') {\n    return /*#__PURE__*/_jsxDEV(View, {\n      style: styles.mainPane,\n      children: [/*#__PURE__*/_jsxDEV(View, {\n        style: styles.topPane,\n        children: [/*#__PURE__*/_jsxDEV(Text, {\n          style: styles.title,\n          children: \"Reset Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Text, {\n          style: styles.subtitle,\n          children: \"Enter new password, make sure it follows the required format\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(View, {\n        style: styles.bodyPane,\n        children: [/*#__PURE__*/_jsxDEV(TextInput, {\n          skinStyle: styles.inputSkin,\n          placeholder: \"New Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextInput, {\n          skinStyle: styles.inputSkin,\n          placeholder: \"Confirm Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this);\n  }\n\n  if (request === 'failed') {\n    return /*#__PURE__*/_jsxDEV(ErrorPage, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(LoadingPage, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 10\n  }, this);\n}\n\n_s(HomePage, \"rOhzE+G9w0wKJVLFsCzsPW5Mz+0=\", false, function () {\n  return [useParams];\n});\n\n_c = HomePage;\n\nvar _c;\n\n$RefreshReg$(_c, \"HomePage\");","map":{"version":3,"sources":["C:/Users/Makaru/Documents/React Project/broowingcoffee-web-server/src/pages/ResetPassword/index.js"],"names":["ErrorPage","LoadingPage","useEffect","useState","useParams","SECRET_KEY","SERVER","Text","TextInput","View","styles","HomePage","token","request","setRequest","fetch","headers","then","res","json","status","mainPane","topPane","title","subtitle","bodyPane","inputSkin"],"mappings":";;;AAAA,SAAQA,SAAR,EAAmBC,WAAnB,QAAqC,OAArC;AACA,SAAQC,SAAR,EAAmBC,QAAnB,QAAkC,OAAlC;AACA,SAAQC,SAAR,QAAwB,cAAxB;AACA,SAAQC,UAAR,EAAoBC,MAApB,QAAiC,WAAjC;AACA,SAAQC,IAAR,EAAcC,SAAd,EAAyBC,IAAzB,QAAoC,YAApC;AACA,OAAOC,MAAP,MAAmB,eAAnB;;AAEA,eAAe,SAASC,QAAT,GAAoB;AAAA;;AACjC,QAAM;AAACC,IAAAA;AAAD,MAAUR,SAAS,EAAzB;AACA,QAAM,CAACS,OAAD,EAAUC,UAAV,IAAwBX,QAAQ,CAAC,SAAD,CAAtC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACda,IAAAA,KAAK,CAAE,GAAET,MAAO,IAAGD,UAAW,kCAAzB,EAA4D;AAC/DW,MAAAA,OAAO,EAAE;AAAC,4BAAoBJ;AAArB;AADsD,KAA5D,CAAL,CAGGK,IAHH,CAGQC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EAHf,EAIGF,IAJH,CAIQC,GAAG,IAAI;AACX,UAAI,CAACA,GAAG,CAACE,MAAT,EAAiB;AACfN,QAAAA,UAAU,CAAC,QAAD,CAAV;AACA;AACD;;AACDA,MAAAA,UAAU,CAAC,SAAD,CAAV;AACD,KAVH;AAWD,GAZQ,EAYN,EAZM,CAAT;;AAcA,MAAID,OAAO,KAAK,SAAhB,EAA2B;AACzB,wBACE,QAAC,IAAD;AAAM,MAAA,KAAK,EAAEH,MAAM,CAACW,QAApB;AAAA,8BACE,QAAC,IAAD;AAAM,QAAA,KAAK,EAAEX,MAAM,CAACY,OAApB;AAAA,gCACE,QAAC,IAAD;AAAM,UAAA,KAAK,EAAEZ,MAAM,CAACa,KAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,IAAD;AAAM,UAAA,KAAK,EAAEb,MAAM,CAACc,QAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAOE,QAAC,IAAD;AAAM,QAAA,KAAK,EAAEd,MAAM,CAACe,QAApB;AAAA,gCACE,QAAC,SAAD;AAAW,UAAA,SAAS,EAAEf,MAAM,CAACgB,SAA7B;AAAwC,UAAA,WAAW,EAAC;AAApD;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,SAAD;AAAW,UAAA,SAAS,EAAEhB,MAAM,CAACgB,SAA7B;AAAwC,UAAA,WAAW,EAAC;AAApD;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cAPF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAcD;;AAED,MAAIb,OAAO,KAAK,QAAhB,EAA0B;AACxB,wBAAO,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AAED,sBAAO,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA,UAAP;AACD;;GAxCuBF,Q;UACNP,S;;;KADMO,Q","sourcesContent":["import {ErrorPage, LoadingPage} from 'pages';\r\nimport {useEffect, useState} from 'react';\r\nimport {useParams} from 'react-router';\r\nimport {SECRET_KEY, SERVER} from 'utils/env';\r\nimport {Text, TextInput, View} from 'components';\r\nimport styles from './.module.css';\r\n\r\nexport default function HomePage() {\r\n  const {token} = useParams();\r\n  const [request, setRequest] = useState('pending');\r\n\r\n  useEffect(() => {\r\n    fetch(`${SERVER}/${SECRET_KEY}/api/service/reset-password-auth`, {\r\n      headers: {'reset-auth-token': token},\r\n    })\r\n      .then(res => res.json())\r\n      .then(res => {\r\n        if (!res.status) {\r\n          setRequest('failed');\r\n          return;\r\n        }\r\n        setRequest('success');\r\n      });\r\n  }, []);\r\n\r\n  if (request === 'success') {\r\n    return (\r\n      <View style={styles.mainPane}>\r\n        <View style={styles.topPane}>\r\n          <Text style={styles.title}>Reset Password</Text>\r\n          <Text style={styles.subtitle}>\r\n            Enter new password, make sure it follows the required format\r\n          </Text>\r\n        </View>\r\n        <View style={styles.bodyPane}>\r\n          <TextInput skinStyle={styles.inputSkin} placeholder='New Password' />\r\n          <TextInput skinStyle={styles.inputSkin} placeholder='Confirm Password' />\r\n        </View>\r\n      </View>\r\n    );\r\n  }\r\n\r\n  if (request === 'failed') {\r\n    return <ErrorPage />;\r\n  }\r\n\r\n  return <LoadingPage />;\r\n}\r\n"]},"metadata":{},"sourceType":"module"}