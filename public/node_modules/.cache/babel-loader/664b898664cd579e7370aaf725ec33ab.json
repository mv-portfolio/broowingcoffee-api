{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Makaru\\\\Documents\\\\React Project\\\\broowingcoffee-web-server\\\\src\\\\pages\\\\ResetPassword\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport { Text, View } from 'components';\nimport { ErrorPage, LoadingPage } from 'pages';\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router';\nimport { SECRET_KEY, SERVER } from 'utils/env';\nimport styles from './.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function HomePage() {\n  _s();\n\n  const {\n    token\n  } = useParams();\n  const [request, setRequest] = useState({\n    status: undefined,\n    message: ''\n  });\n  useEffect(() => {// fetch(`${SERVER}/${SECRET_KEY}/api/service/`);\n  }, []);\n\n  if (request.status) {\n    return /*#__PURE__*/_jsxDEV(View, {\n      style: styles.mainPane,\n      children: [/*#__PURE__*/_jsxDEV(Text, {\n        style: styles.title,\n        children: \"Reset Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Text, {\n        style: styles.subtitle,\n        children: token\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this);\n  }\n\n  if (request.status) {\n    return /*#__PURE__*/_jsxDEV(ErrorPage, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(LoadingPage, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 10\n  }, this);\n}\n\n_s(HomePage, \"oQrQaFYvMyti5oREzHHfV1IalXw=\", false, function () {\n  return [useParams];\n});\n\n_c = HomePage;\n\nvar _c;\n\n$RefreshReg$(_c, \"HomePage\");","map":{"version":3,"sources":["C:/Users/Makaru/Documents/React Project/broowingcoffee-web-server/src/pages/ResetPassword/index.js"],"names":["Text","View","ErrorPage","LoadingPage","useEffect","useState","useParams","SECRET_KEY","SERVER","styles","HomePage","token","request","setRequest","status","undefined","message","mainPane","title","subtitle"],"mappings":";;;AAAA,SAAQA,IAAR,EAAcC,IAAd,QAAyB,YAAzB;AACA,SAAQC,SAAR,EAAmBC,WAAnB,QAAqC,OAArC;AACA,SAAQC,SAAR,EAAmBC,QAAnB,QAAkC,OAAlC;AACA,SAAQC,SAAR,QAAwB,cAAxB;AACA,SAASC,UAAT,EAAqBC,MAArB,QAAmC,WAAnC;AACA,OAAOC,MAAP,MAAmB,eAAnB;;AAEA,eAAe,SAASC,QAAT,GAAoB;AAAA;;AACjC,QAAM;AAACC,IAAAA;AAAD,MAAUL,SAAS,EAAzB;AACA,QAAM,CAACM,OAAD,EAAUC,UAAV,IAAwBR,QAAQ,CAAC;AAACS,IAAAA,MAAM,EAAEC,SAAT;AAAoBC,IAAAA,OAAO,EAAE;AAA7B,GAAD,CAAtC;AAGAZ,EAAAA,SAAS,CAAC,MAAM,CAEd;AAED,GAJQ,EAIN,EAJM,CAAT;;AAMA,MAAIQ,OAAO,CAACE,MAAZ,EAAoB;AAClB,wBACE,QAAC,IAAD;AAAM,MAAA,KAAK,EAAEL,MAAM,CAACQ,QAApB;AAAA,8BACE,QAAC,IAAD;AAAM,QAAA,KAAK,EAAER,MAAM,CAACS,KAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,IAAD;AAAM,QAAA,KAAK,EAAET,MAAM,CAACU,QAApB;AAAA,kBAA+BR;AAA/B;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAMD;;AAED,MAAIC,OAAO,CAACE,MAAZ,EAAoB;AAClB,wBAAO,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AAED,sBAAO,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA,UAAP;AACD;;GAzBuBJ,Q;UACNJ,S;;;KADMI,Q","sourcesContent":["import {Text, View} from 'components';\r\nimport {ErrorPage, LoadingPage} from 'pages';\r\nimport {useEffect, useState} from 'react';\r\nimport {useParams} from 'react-router';\r\nimport { SECRET_KEY, SERVER } from 'utils/env';\r\nimport styles from './.module.css';\r\n\r\nexport default function HomePage() {\r\n  const {token} = useParams();\r\n  const [request, setRequest] = useState({status: undefined, message: ''});\r\n\r\n\r\n  useEffect(() => {\r\n\r\n    // fetch(`${SERVER}/${SECRET_KEY}/api/service/`);\r\n\r\n  }, [])\r\n\r\n  if (request.status) {\r\n    return (\r\n      <View style={styles.mainPane}>\r\n        <Text style={styles.title}>Reset Password</Text>\r\n        <Text style={styles.subtitle}>{token}</Text>\r\n      </View>\r\n    );\r\n  }\r\n\r\n  if (request.status) {\r\n    return <ErrorPage />;\r\n  }\r\n\r\n  return <LoadingPage />;\r\n}\r\n"]},"metadata":{},"sourceType":"module"}