{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Makaru\\\\Documents\\\\React Project\\\\broowingcoffee-web-server\\\\src\\\\components\\\\TextInput\\\\index.js\";\nimport { Button, Icon, View } from 'components';\nimport { ACCENT_COLOR } from 'constants/colors';\nimport { forwardRef } from 'react';\nimport styles from './.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default _c2 = /*#__PURE__*/forwardRef(_c = ({\n  id,\n  skinStyle,\n  bodyStyle,\n  value,\n  onChangeText,\n  prefixComponent,\n  suffixComponent,\n  placeholder,\n  isTextEncrypt,\n  ...props\n}, ref) => {\n  const onTextEncrypt = status => {\n    if (status) {\n      return /*#__PURE__*/_jsxDEV(Button, {\n        children: /*#__PURE__*/_jsxDEV(Icon, {\n          font: \"Feather\",\n          name: \"eye-off\",\n          size: \"3vh\",\n          color: ACCENT_COLOR\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 11\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(Button, {\n      children: /*#__PURE__*/_jsxDEV(Icon, {\n        font: \"Feather\",\n        name: \"eye\",\n        size: \"3vh\",\n        color: ACCENT_COLOR\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(View, {\n    style: `${styles.inputPane} ${skinStyle}`,\n    children: [prefixComponent && /*#__PURE__*/_jsxDEV(View, {\n      style: styles.prefixComponentPane,\n      children: prefixComponent\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      id: id,\n      ref: ref,\n      className: `${styles.input} ${bodyStyle}`,\n      value: value,\n      onChange: evt => onChangeText ? onChangeText(evt.target.value) : evt,\n      placeholder: placeholder,\n      ...props\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }, this), placeholder.toLowerCase().includes('password') && onTextEncrypt(isTextEncrypt)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 7\n  }, this);\n});\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"%default%$forwardRef\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["C:/Users/Makaru/Documents/React Project/broowingcoffee-web-server/src/components/TextInput/index.js"],"names":["Button","Icon","View","ACCENT_COLOR","forwardRef","styles","id","skinStyle","bodyStyle","value","onChangeText","prefixComponent","suffixComponent","placeholder","isTextEncrypt","props","ref","onTextEncrypt","status","inputPane","prefixComponentPane","input","evt","target","toLowerCase","includes"],"mappings":";AAAA,SAAQA,MAAR,EAAgBC,IAAhB,EAAsBC,IAAtB,QAAiC,YAAjC;AACA,SAAQC,YAAR,QAA2B,kBAA3B;AACA,SAAQC,UAAR,QAAyB,OAAzB;AACA,OAAOC,MAAP,MAAmB,eAAnB;;AAEA,kCAAeD,UAAU,MACvB,CACE;AACEE,EAAAA,EADF;AAEEC,EAAAA,SAFF;AAGEC,EAAAA,SAHF;AAIEC,EAAAA,KAJF;AAKEC,EAAAA,YALF;AAMEC,EAAAA,eANF;AAOEC,EAAAA,eAPF;AAQEC,EAAAA,WARF;AASEC,EAAAA,aATF;AAUE,KAAGC;AAVL,CADF,EAaEC,GAbF,KAcK;AACH,QAAMC,aAAa,GAAGC,MAAM,IAAI;AAC9B,QAAIA,MAAJ,EAAY;AACV,0BACE,QAAC,MAAD;AAAA,+BACE,QAAC,IAAD;AAAM,UAAA,IAAI,EAAC,SAAX;AAAqB,UAAA,IAAI,EAAC,SAA1B;AAAoC,UAAA,IAAI,EAAC,KAAzC;AAA+C,UAAA,KAAK,EAAEf;AAAtD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF;AAKD;;AACD,wBACE,QAAC,MAAD;AAAA,6BACE,QAAC,IAAD;AAAM,QAAA,IAAI,EAAC,SAAX;AAAqB,QAAA,IAAI,EAAC,KAA1B;AAAgC,QAAA,IAAI,EAAC,KAArC;AAA2C,QAAA,KAAK,EAAEA;AAAlD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AAKD,GAbD;;AAeA,sBACE,QAAC,IAAD;AAAM,IAAA,KAAK,EAAG,GAAEE,MAAM,CAACc,SAAU,IAAGZ,SAAU,EAA9C;AAAA,eACGI,eAAe,iBACd,QAAC,IAAD;AAAM,MAAA,KAAK,EAAEN,MAAM,CAACe,mBAApB;AAAA,gBAA0CT;AAA1C;AAAA;AAAA;AAAA;AAAA,YAFJ,eAIE;AACE,MAAA,EAAE,EAAEL,EADN;AAEE,MAAA,GAAG,EAAEU,GAFP;AAGE,MAAA,SAAS,EAAG,GAAEX,MAAM,CAACgB,KAAM,IAAGb,SAAU,EAH1C;AAIE,MAAA,KAAK,EAAEC,KAJT;AAKE,MAAA,QAAQ,EAAEa,GAAG,IAAKZ,YAAY,GAAGA,YAAY,CAACY,GAAG,CAACC,MAAJ,CAAWd,KAAZ,CAAf,GAAoCa,GALpE;AAME,MAAA,WAAW,EAAET,WANf;AAAA,SAOME;AAPN;AAAA;AAAA;AAAA;AAAA,YAJF,EAaGF,WAAW,CAACW,WAAZ,GAA0BC,QAA1B,CAAmC,UAAnC,KAAkDR,aAAa,CAACH,aAAD,CAblE;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAiBD,CAhDsB,CAAzB","sourcesContent":["import {Button, Icon, View} from 'components';\r\nimport {ACCENT_COLOR} from 'constants/colors';\r\nimport {forwardRef} from 'react';\r\nimport styles from './.module.css';\r\n\r\nexport default forwardRef(\r\n  (\r\n    {\r\n      id,\r\n      skinStyle,\r\n      bodyStyle,\r\n      value,\r\n      onChangeText,\r\n      prefixComponent,\r\n      suffixComponent,\r\n      placeholder,\r\n      isTextEncrypt,\r\n      ...props\r\n    },\r\n    ref,\r\n  ) => {\r\n    const onTextEncrypt = status => {\r\n      if (status) {\r\n        return (\r\n          <Button>\r\n            <Icon font='Feather' name='eye-off' size='3vh' color={ACCENT_COLOR} />\r\n          </Button>\r\n        );\r\n      }\r\n      return (\r\n        <Button>\r\n          <Icon font='Feather' name='eye' size='3vh' color={ACCENT_COLOR} />\r\n        </Button>\r\n      );\r\n    };\r\n\r\n    return (\r\n      <View style={`${styles.inputPane} ${skinStyle}`}>\r\n        {prefixComponent && (\r\n          <View style={styles.prefixComponentPane}>{prefixComponent}</View>\r\n        )}\r\n        <input\r\n          id={id}\r\n          ref={ref}\r\n          className={`${styles.input} ${bodyStyle}`}\r\n          value={value}\r\n          onChange={evt => (onChangeText ? onChangeText(evt.target.value) : evt)}\r\n          placeholder={placeholder}\r\n          {...props}\r\n        />\r\n        {placeholder.toLowerCase().includes('password') && onTextEncrypt(isTextEncrypt)}\r\n      </View>\r\n    );\r\n  },\r\n);\r\n"]},"metadata":{},"sourceType":"module"}