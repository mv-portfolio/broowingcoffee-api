{"ast":null,"code":"import{isObject,isTypeof}from'utils/checker';export var resetPasswordInitState={isEncrypt:true,newPassword:'',confirmPassword:'',passwordStrength:0,isMatched:false,request:'pending'};export default function resetPassword(){var state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:resetPasswordInitState;var action=arguments.length>1?arguments[1]:undefined;switch(action.type){case'set':return{isEncrypt:isTypeof('boolean',action.isEncrypt,state.isEncrypt),isMatched:isTypeof('boolean',action.isMatched,state.isMatched),newPassword:isTypeof('string',action.newPassword,state.newPassword),passwordStrength:isTypeof('number',action.passwordStrength,state.passwordStrength),confirmPassword:isTypeof('string',action.confirmPassword,state.confirmPassword),request:isTypeof('string',action.request,state.request)};case'clear':return resetPasswordInitState;default:return state;}}","map":{"version":3,"sources":["C:/Users/Makaru/Documents/React Project/broowingcoffee-web-server/src/hooks/resetPassword.js"],"names":["isObject","isTypeof","resetPasswordInitState","isEncrypt","newPassword","confirmPassword","passwordStrength","isMatched","request","resetPassword","state","action","type"],"mappings":"AAAA,OAAQA,QAAR,CAAkBC,QAAlB,KAAiC,eAAjC,CAEA,MAAO,IAAMC,CAAAA,sBAAsB,CAAG,CACpCC,SAAS,CAAE,IADyB,CAEpCC,WAAW,CAAE,EAFuB,CAGpCC,eAAe,CAAE,EAHmB,CAIpCC,gBAAgB,CAAE,CAJkB,CAKpCC,SAAS,CAAE,KALyB,CAMpCC,OAAO,CAAE,SAN2B,CAA/B,CASP,cAAe,SAASC,CAAAA,aAAT,EAA+D,IAAxCC,CAAAA,KAAwC,2DAAhCR,sBAAgC,IAARS,CAAAA,MAAQ,2CAC5E,OAAQA,MAAM,CAACC,IAAf,EACE,IAAK,KAAL,CACE,MAAO,CACLT,SAAS,CAAEF,QAAQ,CAAC,SAAD,CAAYU,MAAM,CAACR,SAAnB,CAA8BO,KAAK,CAACP,SAApC,CADd,CAELI,SAAS,CAAEN,QAAQ,CAAC,SAAD,CAAYU,MAAM,CAACJ,SAAnB,CAA8BG,KAAK,CAACH,SAApC,CAFd,CAGLH,WAAW,CAAEH,QAAQ,CAAC,QAAD,CAAWU,MAAM,CAACP,WAAlB,CAA+BM,KAAK,CAACN,WAArC,CAHhB,CAILE,gBAAgB,CAAEL,QAAQ,CACxB,QADwB,CAExBU,MAAM,CAACL,gBAFiB,CAGxBI,KAAK,CAACJ,gBAHkB,CAJrB,CASLD,eAAe,CAAEJ,QAAQ,CACvB,QADuB,CAEvBU,MAAM,CAACN,eAFgB,CAGvBK,KAAK,CAACL,eAHiB,CATpB,CAcLG,OAAO,CAAEP,QAAQ,CAAC,QAAD,CAAWU,MAAM,CAACH,OAAlB,CAA2BE,KAAK,CAACF,OAAjC,CAdZ,CAAP,CAiBF,IAAK,OAAL,CACE,MAAON,CAAAA,sBAAP,CAEF,QACE,MAAOQ,CAAAA,KAAP,CAvBJ,CAyBD","sourcesContent":["import {isObject, isTypeof} from 'utils/checker';\r\n\r\nexport const resetPasswordInitState = {\r\n  isEncrypt: true,\r\n  newPassword: '',\r\n  confirmPassword: '',\r\n  passwordStrength: 0,\r\n  isMatched: false,\r\n  request: 'pending',\r\n};\r\n\r\nexport default function resetPassword(state = resetPasswordInitState, action) {\r\n  switch (action.type) {\r\n    case 'set':\r\n      return {\r\n        isEncrypt: isTypeof('boolean', action.isEncrypt, state.isEncrypt),\r\n        isMatched: isTypeof('boolean', action.isMatched, state.isMatched),\r\n        newPassword: isTypeof('string', action.newPassword, state.newPassword),\r\n        passwordStrength: isTypeof(\r\n          'number',\r\n          action.passwordStrength,\r\n          state.passwordStrength,\r\n        ),\r\n        confirmPassword: isTypeof(\r\n          'string',\r\n          action.confirmPassword,\r\n          state.confirmPassword,\r\n        ),\r\n        request: isTypeof('string', action.request, state.request),\r\n      };\r\n\r\n    case 'clear':\r\n      return resetPasswordInitState;\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}