{"ast":null,"code":"import _slicedToArray from\"C:/Users/Makaru/Documents/React Project/broowingcoffee-web-server/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{useEffect,useReducer,useState}from'react';import{useParams}from'react-router';import{ErrorPage,LoadingPage}from'pages';import{SECRET_KEY,SERVER}from'utils/env';import{Text,TextInput,View,Separator,Button}from'components';import styles from'./.module.css';import{resetPassword as resetPasswordReducer,resetPasswordInitState}from'hooks';import{hasLetter,hasLowerCaseLetter,hasNumber,hasSymbol,hasUpperCaseLetter}from'utils/checker';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export default function HomePage(){var _useParams=useParams(),token=_useParams.token;var _useState=useState('pending'),_useState2=_slicedToArray(_useState,2),request=_useState2[0],setRequest=_useState2[1];var _useReducer=useReducer(resetPasswordReducer,resetPasswordInitState),_useReducer2=_slicedToArray(_useReducer,2),state=_useReducer2[0],setState=_useReducer2[1];var _useState3=useState({input1:true,input2:true}),_useState4=_slicedToArray(_useState3,2),encrpyt=_useState4[0],setEncrypt=_useState4[1];useEffect(function(){fetch(\"\".concat(SERVER,\"/\").concat(SECRET_KEY,\"/api/service/reset-password-auth\"),{headers:{'reset-auth-token':token}}).then(function(res){return res.json();}).then(function(res){if(!res.status){setState({type:'set',request:'failed'});return;}setState({type:'set',request:'success'});});},[]);var strength=function strength(val){var strength=0;if(hasUpperCaseLetter(val)){strength+=25;}if(hasLowerCaseLetter(val)){strength+=25;}if(hasSymbol(val)){strength+=25;}if(hasNumber(val)){strength+=25;}return strength;};var _onChangeText=function onChangeText(component,val){if(component==='new-password'){setState({type:'set',newPassword:val,passwordStrength:strength(val),isMatched:state.newPassword===state.confirmPassword});return;}if(component==='confirm-password'){setState({type:'set',confirmPassword:val,isMatched:state.newPassword===state.confirmPassword});return;}};var onClickChange=function onClickChange(){console.log(state);};if(state.request==='success'){return/*#__PURE__*/_jsxs(View,{style:styles.mainPane,children:[/*#__PURE__*/_jsxs(View,{style:styles.topPane,children:[/*#__PURE__*/_jsx(Text,{style:styles.title,children:\"New Password\"}),/*#__PURE__*/_jsx(Separator,{vertical:0.25}),/*#__PURE__*/_jsx(Text,{style:styles.subtitle,children:\"Please be sure, the password you enter was not leaked to anyone\"})]}),/*#__PURE__*/_jsx(Separator,{vertical:2}),/*#__PURE__*/_jsxs(View,{style:styles.bodyPane,children:[/*#__PURE__*/_jsx(TextInput,{skinStyle:styles.inputSkin,placeholder:\"New Password\",showIndicator:true,indicatorProgress:state.passwordStrength,isTextEncrypt:state.isEncrypt,value:state.newPassword,onChangeText:function onChangeText(text){return _onChangeText('new-password',text);}}),/*#__PURE__*/_jsx(Separator,{vertical:0.5}),/*#__PURE__*/_jsx(TextInput,{skinStyle:styles.inputSkin,placeholder:\"Confirm Password\",isTextEncrypt:state.isEncrypt,onTextEncrypt:function onTextEncrypt(){return setState({type:'set',isEncrypt:!state.isEncrypt});},value:state.confirmPassword,onChangeText:function onChangeText(text){return _onChangeText('confirm-password',text);}}),/*#__PURE__*/_jsx(Separator,{vertical:1}),/*#__PURE__*/_jsx(Button,{style:styles.button,title:\"Change\",onClick:onClickChange})]})]});}if(state.request==='failed'){return/*#__PURE__*/_jsx(ErrorPage,{});}return/*#__PURE__*/_jsx(LoadingPage,{});}","map":{"version":3,"sources":["C:/Users/Makaru/Documents/React Project/broowingcoffee-web-server/src/pages/ResetPassword/index.js"],"names":["useEffect","useReducer","useState","useParams","ErrorPage","LoadingPage","SECRET_KEY","SERVER","Text","TextInput","View","Separator","Button","styles","resetPassword","resetPasswordReducer","resetPasswordInitState","hasLetter","hasLowerCaseLetter","hasNumber","hasSymbol","hasUpperCaseLetter","HomePage","token","request","setRequest","state","setState","input1","input2","encrpyt","setEncrypt","fetch","headers","then","res","json","status","type","strength","val","onChangeText","component","newPassword","passwordStrength","isMatched","confirmPassword","onClickChange","console","log","mainPane","topPane","title","subtitle","bodyPane","inputSkin","isEncrypt","text","button"],"mappings":"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","sourcesContent":["import {useEffect, useReducer, useState} from 'react';\r\nimport {useParams} from 'react-router';\r\nimport {ErrorPage, LoadingPage} from 'pages';\r\nimport {SECRET_KEY, SERVER} from 'utils/env';\r\nimport {Text, TextInput, View, Separator, Button} from 'components';\r\nimport styles from './.module.css';\r\nimport {resetPassword as resetPasswordReducer, resetPasswordInitState} from 'hooks';\r\nimport {\r\n  hasLetter,\r\n  hasLowerCaseLetter,\r\n  hasNumber,\r\n  hasSymbol,\r\n  hasUpperCaseLetter,\r\n} from 'utils/checker';\r\n\r\nexport default function HomePage() {\r\n  const {token} = useParams();\r\n  const [request, setRequest] = useState('pending');\r\n  const [state, setState] = useReducer(resetPasswordReducer, resetPasswordInitState);\r\n  const [encrpyt, setEncrypt] = useState({input1: true, input2: true});\r\n\r\n  useEffect(() => {\r\n    fetch(`${SERVER}/${SECRET_KEY}/api/service/reset-password-auth`, {\r\n      headers: {'reset-auth-token': token},\r\n    })\r\n      .then(res => res.json())\r\n      .then(res => {\r\n        if (!res.status) {\r\n          setState({type: 'set', request: 'failed'});\r\n          return;\r\n        }\r\n        setState({type: 'set', request: 'success'});\r\n      });\r\n  }, []);\r\n\r\n  const strength = val => {\r\n    let strength = 0;\r\n    if (hasUpperCaseLetter(val)) {\r\n      strength += 25;\r\n    }\r\n    if (hasLowerCaseLetter(val)) {\r\n      strength += 25;\r\n    }\r\n    if (hasSymbol(val)) {\r\n      strength += 25;\r\n    }\r\n    if (hasNumber(val)) {\r\n      strength += 25;\r\n    }\r\n    return strength;\r\n  };\r\n  const onChangeText = (component, val) => {\r\n    if (component === 'new-password') {\r\n      setState({\r\n        type: 'set',\r\n        newPassword: val,\r\n        passwordStrength: strength(val),\r\n        isMatched: state.newPassword === state.confirmPassword,\r\n      });\r\n      return;\r\n    }\r\n    if (component === 'confirm-password') {\r\n      setState({\r\n        type: 'set',\r\n        confirmPassword: val,\r\n        isMatched: state.newPassword === state.confirmPassword,\r\n      });\r\n      return;\r\n    }\r\n  };\r\n\r\n  const onClickChange = () => {\r\n    console.log(state);\r\n  };\r\n\r\n  if (state.request === 'success') {\r\n    return (\r\n      <View style={styles.mainPane}>\r\n        <View style={styles.topPane}>\r\n          <Text style={styles.title}>New Password</Text>\r\n          <Separator vertical={0.25} />\r\n          <Text style={styles.subtitle}>\r\n            Please be sure, the password you enter was not leaked to anyone\r\n          </Text>\r\n        </View>\r\n        <Separator vertical={2} />\r\n        <View style={styles.bodyPane}>\r\n          <TextInput\r\n            skinStyle={styles.inputSkin}\r\n            placeholder='New Password'\r\n            showIndicator={true}\r\n            indicatorProgress={state.passwordStrength}\r\n            isTextEncrypt={state.isEncrypt}\r\n            value={state.newPassword}\r\n            onChangeText={text => onChangeText('new-password', text)}\r\n          />\r\n          <Separator vertical={0.5} />\r\n          <TextInput\r\n            skinStyle={styles.inputSkin}\r\n            placeholder='Confirm Password'\r\n            isTextEncrypt={state.isEncrypt}\r\n            onTextEncrypt={() => setState({type: 'set', isEncrypt: !state.isEncrypt})}\r\n            value={state.confirmPassword}\r\n            onChangeText={text => onChangeText('confirm-password', text)}\r\n          />\r\n          <Separator vertical={1} />\r\n          <Button style={styles.button} title='Change' onClick={onClickChange} />\r\n        </View>\r\n      </View>\r\n    );\r\n  }\r\n\r\n  if (state.request === 'failed') {\r\n    return <ErrorPage />;\r\n  }\r\n\r\n  return <LoadingPage />;\r\n}\r\n"]},"metadata":{},"sourceType":"module"}