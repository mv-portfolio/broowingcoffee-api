{"ast":null,"code":"import { isObject, isTypeof } from 'utils/checker';\nexport const resetPasswordInitState = {\n  isEncrypt: true,\n  newPassword: '',\n  confirmPassword: '',\n  passwordStrength: 0,\n  isMatched: false,\n  request: 'pending',\n  message: '',\n  email: ''\n};\nexport default function resetPassword(state = resetPasswordInitState, action) {\n  switch (action.type) {\n    case 'set':\n      return {\n        isEncrypt: isTypeof('boolean', action.isEncrypt, state.isEncrypt),\n        isMatched: isTypeof('boolean', action.isMatched, state.isMatched),\n        newPassword: isTypeof('string', action.newPassword, state.newPassword),\n        message: isTypeof('string', action.message, state.message),\n        email: isTypeof('string', action.email, state.email),\n        passwordStrength: isTypeof('number', action.passwordStrength, state.passwordStrength),\n        confirmPassword: isTypeof('string', action.confirmPassword, state.confirmPassword),\n        request: isTypeof('string', action.request, state.request)\n      };\n\n    case 'clear':\n      return resetPasswordInitState;\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["C:/Users/Makaru/Documents/React Project/broowingcoffee-web-server/src/hooks/resetPassword.js"],"names":["isObject","isTypeof","resetPasswordInitState","isEncrypt","newPassword","confirmPassword","passwordStrength","isMatched","request","message","email","resetPassword","state","action","type"],"mappings":"AAAA,SAAQA,QAAR,EAAkBC,QAAlB,QAAiC,eAAjC;AAEA,OAAO,MAAMC,sBAAsB,GAAG;AACpCC,EAAAA,SAAS,EAAE,IADyB;AAEpCC,EAAAA,WAAW,EAAE,EAFuB;AAGpCC,EAAAA,eAAe,EAAE,EAHmB;AAIpCC,EAAAA,gBAAgB,EAAE,CAJkB;AAKpCC,EAAAA,SAAS,EAAE,KALyB;AAMpCC,EAAAA,OAAO,EAAE,SAN2B;AAOpCC,EAAAA,OAAO,EAAE,EAP2B;AAQpCC,EAAAA,KAAK,EAAE;AAR6B,CAA/B;AAWP,eAAe,SAASC,aAAT,CAAuBC,KAAK,GAAGV,sBAA/B,EAAuDW,MAAvD,EAA+D;AAC5E,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,KAAL;AACE,aAAO;AACLX,QAAAA,SAAS,EAAEF,QAAQ,CAAC,SAAD,EAAYY,MAAM,CAACV,SAAnB,EAA8BS,KAAK,CAACT,SAApC,CADd;AAELI,QAAAA,SAAS,EAAEN,QAAQ,CAAC,SAAD,EAAYY,MAAM,CAACN,SAAnB,EAA8BK,KAAK,CAACL,SAApC,CAFd;AAGLH,QAAAA,WAAW,EAAEH,QAAQ,CAAC,QAAD,EAAWY,MAAM,CAACT,WAAlB,EAA+BQ,KAAK,CAACR,WAArC,CAHhB;AAILK,QAAAA,OAAO,EAAER,QAAQ,CAAC,QAAD,EAAWY,MAAM,CAACJ,OAAlB,EAA2BG,KAAK,CAACH,OAAjC,CAJZ;AAKLC,QAAAA,KAAK,EAAET,QAAQ,CAAC,QAAD,EAAWY,MAAM,CAACH,KAAlB,EAAyBE,KAAK,CAACF,KAA/B,CALV;AAMLJ,QAAAA,gBAAgB,EAAEL,QAAQ,CACxB,QADwB,EAExBY,MAAM,CAACP,gBAFiB,EAGxBM,KAAK,CAACN,gBAHkB,CANrB;AAWLD,QAAAA,eAAe,EAAEJ,QAAQ,CACvB,QADuB,EAEvBY,MAAM,CAACR,eAFgB,EAGvBO,KAAK,CAACP,eAHiB,CAXpB;AAgBLG,QAAAA,OAAO,EAAEP,QAAQ,CAAC,QAAD,EAAWY,MAAM,CAACL,OAAlB,EAA2BI,KAAK,CAACJ,OAAjC;AAhBZ,OAAP;;AAmBF,SAAK,OAAL;AACE,aAAON,sBAAP;;AAEF;AACE,aAAOU,KAAP;AAzBJ;AA2BD","sourcesContent":["import {isObject, isTypeof} from 'utils/checker';\r\n\r\nexport const resetPasswordInitState = {\r\n  isEncrypt: true,\r\n  newPassword: '',\r\n  confirmPassword: '',\r\n  passwordStrength: 0,\r\n  isMatched: false,\r\n  request: 'pending',\r\n  message: '',\r\n  email: '',\r\n};\r\n\r\nexport default function resetPassword(state = resetPasswordInitState, action) {\r\n  switch (action.type) {\r\n    case 'set':\r\n      return {\r\n        isEncrypt: isTypeof('boolean', action.isEncrypt, state.isEncrypt),\r\n        isMatched: isTypeof('boolean', action.isMatched, state.isMatched),\r\n        newPassword: isTypeof('string', action.newPassword, state.newPassword),\r\n        message: isTypeof('string', action.message, state.message),\r\n        email: isTypeof('string', action.email, state.email),\r\n        passwordStrength: isTypeof(\r\n          'number',\r\n          action.passwordStrength,\r\n          state.passwordStrength,\r\n        ),\r\n        confirmPassword: isTypeof(\r\n          'string',\r\n          action.confirmPassword,\r\n          state.confirmPassword,\r\n        ),\r\n        request: isTypeof('string', action.request, state.request),\r\n      };\r\n\r\n    case 'clear':\r\n      return resetPasswordInitState;\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}