{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Makaru\\\\Documents\\\\React Project\\\\broowingcoffee-web-server\\\\src\\\\pages\\\\ResetPassword\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useReducer, useState } from 'react';\nimport { useParams } from 'react-router';\nimport { ErrorPage, LoadingPage, SuccessPage } from 'pages';\nimport { Text, TextInput, View, Separator, Button } from 'components';\nimport styles from './.module.css';\nimport { resetPassword as resetPasswordReducer, resetPasswordInitState } from 'hooks';\nimport { hasLowerCaseLetter, hasNumber, hasSymbol, hasUpperCaseLetter } from 'utils/checker';\nimport { server } from 'network/service';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function HomePage() {\n  _s();\n\n  const {\n    token\n  } = useParams();\n  const [state, setState] = useReducer(resetPasswordReducer, resetPasswordInitState);\n  useEffect(() => {\n    server.peek('/reset-password-auth', {\n      headers: {\n        'reset-auth-token': token\n      }\n    }).then(res => {\n      const {\n        res: {\n          email,\n          token\n        },\n        status\n      } = res;\n\n      if (status) {\n        setState({\n          type: 'set',\n          authRequest: 'success',\n          email,\n          token\n        });\n      }\n    }).catch(err => {\n      setState({\n        type: 'set',\n        authRequest: 'failed'\n      });\n    });\n  }, []);\n\n  const strength = val => {\n    let strength = 0;\n\n    if (hasUpperCaseLetter(val)) {\n      if (val.length > 2) {\n        strength += 15;\n      }\n\n      strength += 10;\n    }\n\n    if (hasLowerCaseLetter(val)) {\n      if (val.length > 4) {\n        strength += 15;\n      }\n\n      strength += 10;\n    }\n\n    if (hasSymbol(val)) {\n      if (val.length > 6) {\n        strength += 15;\n      }\n\n      strength += 10;\n    }\n\n    if (hasNumber(val)) {\n      if (val.length > 8) {\n        strength += 15;\n      }\n\n      strength += 10;\n    }\n\n    return strength;\n  };\n\n  const onChangeText = (component, val) => {\n    if (component === 'new-password') {\n      setState({\n        type: 'set',\n        newPassword: val,\n        passwordStrength: strength(val),\n        isMatched: val === state.confirmPassword\n      });\n      return;\n    }\n\n    if (component === 'confirm-password') {\n      setState({\n        type: 'set',\n        confirmPassword: val,\n        isMatched: val === state.newPassword\n      });\n      return;\n    }\n  };\n\n  const onClickChange = () => {\n    if (!state.isMatched) {\n      setState({\n        type: 'set',\n        resetRequest: 'failed',\n        messageRequest: 'Passwords does not matched'\n      });\n      return;\n    }\n\n    server.push('/reset-password-decoder', {\n      email: state.email,\n      newPassword: state.newPassword\n    }, {\n      headers: {\n        'reset-auth-token': state.token\n      }\n    }).then(res => {\n      setState({\n        type: 'set',\n        authRequest: 'success-done'\n      });\n    }).catch(({\n      err\n    }) => {\n      if (err.includes('Password')) {\n        console.log(err);\n        setState({\n          type: 'set',\n          resetRequest: err\n        });\n        return;\n      }\n\n      setState({\n        type: 'set',\n        authRequest: 'failed'\n      });\n    });\n  };\n\n  if (state.authRequest === 'success') {\n    return /*#__PURE__*/_jsxDEV(View, {\n      style: styles.mainPane,\n      children: [/*#__PURE__*/_jsxDEV(View, {\n        style: styles.topPane,\n        children: /*#__PURE__*/_jsxDEV(View, {\n          style: styles.headerPane,\n          children: [/*#__PURE__*/_jsxDEV(Text, {\n            style: styles.title,\n            children: \"New Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Separator, {\n            vertical: 0.25\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Text, {\n            style: styles.subtitle,\n            children: \"Please be sure, the password you enter was not leaked to anyone\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(View, {\n        style: styles.bodyPane,\n        children: [/*#__PURE__*/_jsxDEV(TextInput, {\n          skinStyle: styles.inputSkin,\n          placeholder: \"New Password\",\n          showIndicator: true,\n          indicatorProgress: state.passwordStrength,\n          isTextEncrypt: state.isEncrypt,\n          value: state.newPassword,\n          onChangeText: text => onChangeText('new-password', text)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Separator, {\n          vertical: 0.5\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextInput, {\n          skinStyle: styles.inputSkin,\n          placeholder: \"Confirm Password\",\n          isTextEncrypt: state.isEncrypt,\n          onTextEncrypt: () => setState({\n            type: 'set',\n            isEncrypt: !state.isEncrypt\n          }),\n          value: state.confirmPassword,\n          onChangeText: text => onChangeText('confirm-password', text)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Separator, {\n          vertical: 1\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          style: styles.button,\n          title: \"Change\",\n          onClick: onClickChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(View, {\n        style: styles.bottomPane,\n        children: [state.resetRequest === 'failed' && /*#__PURE__*/_jsxDEV(View, {\n          style: styles.errorPane,\n          children: /*#__PURE__*/_jsxDEV(Text, {\n            style: styles.errorTitle,\n            children: state.messageRequest\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 13\n        }, this), state.resetRequest === 'success' && /*#__PURE__*/_jsxDEV(View, {\n          style: styles.infoPane,\n          children: /*#__PURE__*/_jsxDEV(Text, {\n            style: styles.infoTitle,\n            children: state.messageRequest\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }, this);\n  }\n\n  if (state.authRequest === 'success-done') {\n    return /*#__PURE__*/_jsxDEV(SuccessPage, {\n      title: \"Password Saved\",\n      subtitle: \"You may now use the new password you entered\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 7\n    }, this);\n  }\n\n  if (state.authRequest === 'failed') {\n    return /*#__PURE__*/_jsxDEV(ErrorPage, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(LoadingPage, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 181,\n    columnNumber: 10\n  }, this);\n}\n\n_s(HomePage, \"pXIESGqYZoaA0ADLE+oUlXLJkPA=\", false, function () {\n  return [useParams];\n});\n\n_c = HomePage;\n\nvar _c;\n\n$RefreshReg$(_c, \"HomePage\");","map":{"version":3,"sources":["C:/Users/Makaru/Documents/React Project/broowingcoffee-web-server/src/pages/ResetPassword/index.js"],"names":["useEffect","useReducer","useState","useParams","ErrorPage","LoadingPage","SuccessPage","Text","TextInput","View","Separator","Button","styles","resetPassword","resetPasswordReducer","resetPasswordInitState","hasLowerCaseLetter","hasNumber","hasSymbol","hasUpperCaseLetter","server","HomePage","token","state","setState","peek","headers","then","res","email","status","type","authRequest","catch","err","strength","val","length","onChangeText","component","newPassword","passwordStrength","isMatched","confirmPassword","onClickChange","resetRequest","messageRequest","push","includes","console","log","mainPane","topPane","headerPane","title","subtitle","bodyPane","inputSkin","isEncrypt","text","button","bottomPane","errorPane","errorTitle","infoPane","infoTitle"],"mappings":"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","sourcesContent":["import {useEffect, useReducer, useState} from 'react';\r\nimport {useParams} from 'react-router';\r\nimport {ErrorPage, LoadingPage, SuccessPage} from 'pages';\r\nimport {Text, TextInput, View, Separator, Button} from 'components';\r\nimport styles from './.module.css';\r\nimport {resetPassword as resetPasswordReducer, resetPasswordInitState} from 'hooks';\r\nimport {\r\n  hasLowerCaseLetter,\r\n  hasNumber,\r\n  hasSymbol,\r\n  hasUpperCaseLetter,\r\n} from 'utils/checker';\r\nimport {server} from 'network/service';\r\n\r\nexport default function HomePage() {\r\n  const {token} = useParams();\r\n  const [state, setState] = useReducer(resetPasswordReducer, resetPasswordInitState);\r\n\r\n  useEffect(() => {\r\n    server\r\n      .peek('/reset-password-auth', {\r\n        headers: {'reset-auth-token': token},\r\n      })\r\n      .then(res => {\r\n        const {\r\n          res: {email, token},\r\n          status,\r\n        } = res;\r\n        if (status) {\r\n          setState({type: 'set', authRequest: 'success', email, token});\r\n        }\r\n      })\r\n      .catch(err => {\r\n        setState({type: 'set', authRequest: 'failed'});\r\n      });\r\n  }, []);\r\n\r\n  const strength = val => {\r\n    let strength = 0;\r\n    if (hasUpperCaseLetter(val)) {\r\n      if (val.length > 2) {\r\n        strength += 15;\r\n      }\r\n      strength += 10;\r\n    }\r\n    if (hasLowerCaseLetter(val)) {\r\n      if (val.length > 4) {\r\n        strength += 15;\r\n      }\r\n      strength += 10;\r\n    }\r\n    if (hasSymbol(val)) {\r\n      if (val.length > 6) {\r\n        strength += 15;\r\n      }\r\n      strength += 10;\r\n    }\r\n    if (hasNumber(val)) {\r\n      if (val.length > 8) {\r\n        strength += 15;\r\n      }\r\n      strength += 10;\r\n    }\r\n    return strength;\r\n  };\r\n  const onChangeText = (component, val) => {\r\n    if (component === 'new-password') {\r\n      setState({\r\n        type: 'set',\r\n        newPassword: val,\r\n        passwordStrength: strength(val),\r\n        isMatched: val === state.confirmPassword,\r\n      });\r\n      return;\r\n    }\r\n    if (component === 'confirm-password') {\r\n      setState({\r\n        type: 'set',\r\n        confirmPassword: val,\r\n        isMatched: val === state.newPassword,\r\n      });\r\n      return;\r\n    }\r\n  };\r\n\r\n  const onClickChange = () => {\r\n    if (!state.isMatched) {\r\n      setState({\r\n        type: 'set',\r\n        resetRequest: 'failed',\r\n        messageRequest: 'Passwords does not matched',\r\n      });\r\n      return;\r\n    }\r\n\r\n    server\r\n      .push(\r\n        '/reset-password-decoder',\r\n        {\r\n          email: state.email,\r\n          newPassword: state.newPassword,\r\n        },\r\n        {headers: {'reset-auth-token': state.token}},\r\n      )\r\n      .then(res => {\r\n        setState({type: 'set', authRequest: 'success-done'});\r\n      })\r\n      .catch(({err}) => {\r\n        if (err.includes('Password')) {\r\n          console.log(err);\r\n          setState({type: 'set', resetRequest: err});\r\n          return;\r\n        }\r\n        setState({type: 'set', authRequest: 'failed'});\r\n      });\r\n  };\r\n\r\n  if (state.authRequest === 'success') {\r\n    return (\r\n      <View style={styles.mainPane}>\r\n        <View style={styles.topPane}>\r\n          <View style={styles.headerPane}>\r\n            <Text style={styles.title}>New Password</Text>\r\n            <Separator vertical={0.25} />\r\n            <Text style={styles.subtitle}>\r\n              Please be sure, the password you enter was not leaked to anyone\r\n            </Text>\r\n          </View>\r\n        </View>\r\n        <View style={styles.bodyPane}>\r\n          <TextInput\r\n            skinStyle={styles.inputSkin}\r\n            placeholder='New Password'\r\n            showIndicator={true}\r\n            indicatorProgress={state.passwordStrength}\r\n            isTextEncrypt={state.isEncrypt}\r\n            value={state.newPassword}\r\n            onChangeText={text => onChangeText('new-password', text)}\r\n          />\r\n          <Separator vertical={0.5} />\r\n          <TextInput\r\n            skinStyle={styles.inputSkin}\r\n            placeholder='Confirm Password'\r\n            isTextEncrypt={state.isEncrypt}\r\n            onTextEncrypt={() => setState({type: 'set', isEncrypt: !state.isEncrypt})}\r\n            value={state.confirmPassword}\r\n            onChangeText={text => onChangeText('confirm-password', text)}\r\n          />\r\n          <Separator vertical={1} />\r\n          <Button style={styles.button} title='Change' onClick={onClickChange} />\r\n        </View>\r\n        <View style={styles.bottomPane}>\r\n          {state.resetRequest === 'failed' && (\r\n            <View style={styles.errorPane}>\r\n              <Text style={styles.errorTitle}>{state.messageRequest}</Text>\r\n            </View>\r\n          )}\r\n          {state.resetRequest === 'success' && (\r\n            <View style={styles.infoPane}>\r\n              <Text style={styles.infoTitle}>{state.messageRequest}</Text>\r\n            </View>\r\n          )}\r\n        </View>\r\n      </View>\r\n    );\r\n  }\r\n\r\n  if (state.authRequest === 'success-done') {\r\n    return (\r\n      <SuccessPage\r\n        title='Password Saved'\r\n        subtitle='You may now use the new password you entered'\r\n      />\r\n    );\r\n  }\r\n\r\n  if (state.authRequest === 'failed') {\r\n    return <ErrorPage />;\r\n  }\r\n\r\n  return <LoadingPage />;\r\n}\r\n"]},"metadata":{},"sourceType":"module"}