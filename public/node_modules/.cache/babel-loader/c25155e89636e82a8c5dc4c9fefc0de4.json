{"ast":null,"code":"import { isObject, isTypeof } from 'utils/checker';\nexport const resetPasswordInitState = {\n  isEncrypt: true,\n  newPassword: '',\n  confirmPassword: '',\n  passwordStrength: 0,\n  isMatched: false,\n  authRequest: 'pending',\n  resetRequest: 'pending',\n  messageRequest: '',\n  email: ''\n};\nexport default function resetPassword(state = resetPasswordInitState, action) {\n  switch (action.type) {\n    case 'set':\n      return {\n        isEncrypt: isTypeof('boolean', action.isEncrypt, state.isEncrypt),\n        isMatched: isTypeof('boolean', action.isMatched, state.isMatched),\n        newPassword: isTypeof('string', action.newPassword, state.newPassword),\n        messageRequest: isTypeof('string', action.messageRequest, state.messageRequest),\n        email: isTypeof('string', action.email, state.email),\n        passwordStrength: isTypeof('number', action.passwordStrength, state.passwordStrength),\n        confirmPassword: isTypeof('string', action.confirmPassword, state.confirmPassword),\n        authRequest: isTypeof('string', action.authRequest, state.authRequest),\n        resetRequest: isTypeof('string', action.resetRequest, state.resetRequest)\n      };\n\n    case 'clear':\n      return resetPasswordInitState;\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["C:/Users/Makaru/Documents/React Project/broowingcoffee-web-server/src/hooks/resetPassword.js"],"names":["isObject","isTypeof","resetPasswordInitState","isEncrypt","newPassword","confirmPassword","passwordStrength","isMatched","authRequest","resetRequest","messageRequest","email","resetPassword","state","action","type"],"mappings":"AAAA,SAAQA,QAAR,EAAkBC,QAAlB,QAAiC,eAAjC;AAEA,OAAO,MAAMC,sBAAsB,GAAG;AACpCC,EAAAA,SAAS,EAAE,IADyB;AAEpCC,EAAAA,WAAW,EAAE,EAFuB;AAGpCC,EAAAA,eAAe,EAAE,EAHmB;AAIpCC,EAAAA,gBAAgB,EAAE,CAJkB;AAKpCC,EAAAA,SAAS,EAAE,KALyB;AAMpCC,EAAAA,WAAW,EAAE,SANuB;AAOpCC,EAAAA,YAAY,EAAE,SAPsB;AAQpCC,EAAAA,cAAc,EAAE,EARoB;AASpCC,EAAAA,KAAK,EAAE;AAT6B,CAA/B;AAYP,eAAe,SAASC,aAAT,CAAuBC,KAAK,GAAGX,sBAA/B,EAAuDY,MAAvD,EAA+D;AAC5E,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,KAAL;AACE,aAAO;AACLZ,QAAAA,SAAS,EAAEF,QAAQ,CAAC,SAAD,EAAYa,MAAM,CAACX,SAAnB,EAA8BU,KAAK,CAACV,SAApC,CADd;AAELI,QAAAA,SAAS,EAAEN,QAAQ,CAAC,SAAD,EAAYa,MAAM,CAACP,SAAnB,EAA8BM,KAAK,CAACN,SAApC,CAFd;AAGLH,QAAAA,WAAW,EAAEH,QAAQ,CAAC,QAAD,EAAWa,MAAM,CAACV,WAAlB,EAA+BS,KAAK,CAACT,WAArC,CAHhB;AAILM,QAAAA,cAAc,EAAET,QAAQ,CAAC,QAAD,EAAWa,MAAM,CAACJ,cAAlB,EAAkCG,KAAK,CAACH,cAAxC,CAJnB;AAKLC,QAAAA,KAAK,EAAEV,QAAQ,CAAC,QAAD,EAAWa,MAAM,CAACH,KAAlB,EAAyBE,KAAK,CAACF,KAA/B,CALV;AAMLL,QAAAA,gBAAgB,EAAEL,QAAQ,CACxB,QADwB,EAExBa,MAAM,CAACR,gBAFiB,EAGxBO,KAAK,CAACP,gBAHkB,CANrB;AAWLD,QAAAA,eAAe,EAAEJ,QAAQ,CACvB,QADuB,EAEvBa,MAAM,CAACT,eAFgB,EAGvBQ,KAAK,CAACR,eAHiB,CAXpB;AAgBLG,QAAAA,WAAW,EAAEP,QAAQ,CAAC,QAAD,EAAWa,MAAM,CAACN,WAAlB,EAA+BK,KAAK,CAACL,WAArC,CAhBhB;AAiBLC,QAAAA,YAAY,EAAER,QAAQ,CAAC,QAAD,EAAWa,MAAM,CAACL,YAAlB,EAAgCI,KAAK,CAACJ,YAAtC;AAjBjB,OAAP;;AAoBF,SAAK,OAAL;AACE,aAAOP,sBAAP;;AAEF;AACE,aAAOW,KAAP;AA1BJ;AA4BD","sourcesContent":["import {isObject, isTypeof} from 'utils/checker';\r\n\r\nexport const resetPasswordInitState = {\r\n  isEncrypt: true,\r\n  newPassword: '',\r\n  confirmPassword: '',\r\n  passwordStrength: 0,\r\n  isMatched: false,\r\n  authRequest: 'pending',\r\n  resetRequest: 'pending',\r\n  messageRequest: '',\r\n  email: '',\r\n};\r\n\r\nexport default function resetPassword(state = resetPasswordInitState, action) {\r\n  switch (action.type) {\r\n    case 'set':\r\n      return {\r\n        isEncrypt: isTypeof('boolean', action.isEncrypt, state.isEncrypt),\r\n        isMatched: isTypeof('boolean', action.isMatched, state.isMatched),\r\n        newPassword: isTypeof('string', action.newPassword, state.newPassword),\r\n        messageRequest: isTypeof('string', action.messageRequest, state.messageRequest),\r\n        email: isTypeof('string', action.email, state.email),\r\n        passwordStrength: isTypeof(\r\n          'number',\r\n          action.passwordStrength,\r\n          state.passwordStrength,\r\n        ),\r\n        confirmPassword: isTypeof(\r\n          'string',\r\n          action.confirmPassword,\r\n          state.confirmPassword,\r\n        ),\r\n        authRequest: isTypeof('string', action.authRequest, state.authRequest),\r\n        resetRequest: isTypeof('string', action.resetRequest, state.resetRequest),\r\n      };\r\n\r\n    case 'clear':\r\n      return resetPasswordInitState;\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}