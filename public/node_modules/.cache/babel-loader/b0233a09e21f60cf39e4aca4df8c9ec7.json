{"ast":null,"code":"var isTypeof=function isTypeof(type,value1,value2){if(type==='array'){return Array.isArray(value1)?value1:value2;}return typeof value1===type?value1:value2;};var isName=function isName(val){return /^[a-zA-Z ]*$/.test(val);};var isInteger=function isInteger(val){return /^[0-9]*$/.test(val);};var isDouble=function isDouble(val){return /^\\$?\\d+(,\\d{3})*(\\.\\d*)?$/.test(val);};var isUsername=function isUsername(val){return /^[a-zA-Z0-9]*$/.test(val);};var isEmail=function isEmail(val){return /^(([^<>()[\\]\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@(([^<>()[\\]\\.,;:\\s@\\\"]+\\.)+[^<>()[\\]\\.,;:\\s@\\\"]{2,})$/i.test(val);};var isPassword=function isPassword(val,length){return hasUpperCaseLetter(val)&&hasLowerCaseLetter(val)&&hasNumber(val)&&val.length>=(length||6);};var hasUpperCaseLetter=function hasUpperCaseLetter(val){return /(?=.*([A-Z]))/.test(val);};var hasLowerCaseLetter=function hasLowerCaseLetter(val){return /(?=.*([a-z]))/.test(val);};var hasLetter=function hasLetter(val){return /(?=.*([a-zA-Z]))/.test(val);};var hasNumber=function hasNumber(val){return /(?=.*[0-9])/.test(val);};var hasSymbol=function hasSymbol(val){return /(?=.*[!@#$%^&*()_=+-/])/.test(val);};var isString=function isString(value){return typeof value==='string';};var isArray=function isArray(value){return Array.isArray(value);};var isObject=function isObject(value){return typeof value==='object';};var isJsonString=function isJsonString(value){try{var _isObject=value.slice(0,1)==='{'&&value.slice(value.length-1)==='}';if(typeof value==='string'&&_isObject){JSON.parse(value);}else{return false;}}catch(err){return false;}return true;};module.exports={isTypeof:isTypeof,isName:isName,isInteger:isInteger,isDouble:isDouble,hasNumber:hasNumber,hasLetter:hasLetter,isEmail:isEmail,isUsername:isUsername,isPassword:isPassword,isString:isString,isJsonString:isJsonString,isArray:isArray,isObject:isObject,hasSymbol:hasSymbol,hasUpperCaseLetter:hasUpperCaseLetter,hasLowerCaseLetter:hasLowerCaseLetter};","map":{"version":3,"sources":["C:/Users/Makaru/Documents/React Project/broowingcoffee-web-server/src/utils/checker.js"],"names":["isTypeof","type","value1","value2","Array","isArray","isName","val","test","isInteger","isDouble","isUsername","isEmail","isPassword","length","hasUpperCaseLetter","hasLowerCaseLetter","hasNumber","hasLetter","hasSymbol","isString","value","isObject","isJsonString","slice","JSON","parse","err","module","exports"],"mappings":"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","sourcesContent":["const isTypeof = (type, value1, value2) => {\r\n  if (type === 'array') {\r\n    return Array.isArray(value1) ? value1 : value2;\r\n  }\r\n  return typeof value1 === type ? value1 : value2;\r\n};\r\nconst isName = val => {\r\n  return /^[a-zA-Z ]*$/.test(val);\r\n};\r\nconst isInteger = val => {\r\n  return /^[0-9]*$/.test(val);\r\n};\r\nconst isDouble = val => {\r\n  return /^\\$?\\d+(,\\d{3})*(\\.\\d*)?$/.test(val);\r\n};\r\nconst isUsername = val => {\r\n  return /^[a-zA-Z0-9]*$/.test(val);\r\n};\r\nconst isEmail = val => {\r\n  return /^(([^<>()[\\]\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@(([^<>()[\\]\\.,;:\\s@\\\"]+\\.)+[^<>()[\\]\\.,;:\\s@\\\"]{2,})$/i.test(\r\n    val,\r\n  );\r\n};\r\nconst isPassword = (val, length) => {\r\n  return (\r\n    hasUpperCaseLetter(val) &&\r\n    hasLowerCaseLetter(val) &&\r\n    hasNumber(val) &&\r\n    val.length >= (length || 6)\r\n  );\r\n};\r\nconst hasUpperCaseLetter = val => {\r\n  return /(?=.*([A-Z]))/.test(val);\r\n};\r\nconst hasLowerCaseLetter = val => {\r\n  return /(?=.*([a-z]))/.test(val);\r\n};\r\nconst hasLetter = val => {\r\n  return /(?=.*([a-zA-Z]))/.test(val);\r\n};\r\nconst hasNumber = val => {\r\n  return /(?=.*[0-9])/.test(val);\r\n};\r\nconst hasSymbol = val => {\r\n  return /(?=.*[!@#$%^&*()_=+-/])/.test(val);\r\n};\r\n\r\nconst isString = value => {\r\n  return typeof value === 'string';\r\n};\r\nconst isArray = value => {\r\n  return Array.isArray(value);\r\n};\r\nconst isObject = value => {\r\n  return typeof value === 'object';\r\n};\r\n\r\nconst isJsonString = value => {\r\n  try {\r\n    const isObject =\r\n      value.slice(0, 1) === '{' && value.slice(value.length - 1) === '}';\r\n    if (typeof value === 'string' && isObject) {\r\n      JSON.parse(value);\r\n    } else {\r\n      return false;\r\n    }\r\n  } catch (err) {\r\n    return false;\r\n  }\r\n  return true;\r\n};\r\n\r\nmodule.exports = {\r\n  isTypeof,\r\n  isName,\r\n  isInteger,\r\n  isDouble,\r\n  hasNumber,\r\n  hasLetter,\r\n  isEmail,\r\n  isUsername,\r\n  isPassword,\r\n  isString,\r\n  isJsonString,\r\n  isArray,\r\n  isObject,\r\n  hasSymbol,\r\n  hasUpperCaseLetter,\r\n  hasLowerCaseLetter,\r\n};\r\n"]},"metadata":{},"sourceType":"module"}