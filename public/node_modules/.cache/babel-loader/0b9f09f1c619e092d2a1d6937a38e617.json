{"ast":null,"code":"import axios from 'axios';\nimport { SERVER_URL, SECRET_KEY } from 'utils/env';\nimport requestResolve from './interceptors/request/resolve';\nimport requestReject from './interceptors/request/reject';\nimport responseResolve from './interceptors/response/resolve';\nimport responseReject from './interceptors/response/reject';\n\nconst timeout = seconds => 1000 * seconds;\n\nconst server = axios.create({\n  baseURL: `${SERVER_URL}/${SECRET_KEY}/api/service`,\n  timeout: timeout(5)\n});\nexport const ConfigInterceptor = store => {\n  server.interceptors.request.use(requestResolve, requestReject);\n  server.interceptors.response.use(responseResolve, responseReject(store));\n};\n_c = ConfigInterceptor;\nexport default server;\n\nvar _c;\n\n$RefreshReg$(_c, \"ConfigInterceptor\");","map":{"version":3,"sources":["C:/Users/Makaru/Documents/React Project/broowingcoffee-web-server/src/network/api/server/index.js"],"names":["axios","SERVER_URL","SECRET_KEY","requestResolve","requestReject","responseResolve","responseReject","timeout","seconds","server","create","baseURL","ConfigInterceptor","store","interceptors","request","use","response"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,UAAR,EAAoBC,UAApB,QAAqC,WAArC;AACA,OAAOC,cAAP,MAA2B,gCAA3B;AACA,OAAOC,aAAP,MAA0B,+BAA1B;AACA,OAAOC,eAAP,MAA4B,iCAA5B;AACA,OAAOC,cAAP,MAA2B,gCAA3B;;AAEA,MAAMC,OAAO,GAAGC,OAAO,IAAI,OAAOA,OAAlC;;AAEA,MAAMC,MAAM,GAAGT,KAAK,CAACU,MAAN,CAAa;AAC1BC,EAAAA,OAAO,EAAG,GAAEV,UAAW,IAAGC,UAAW,cADX;AAE1BK,EAAAA,OAAO,EAAEA,OAAO,CAAC,CAAD;AAFU,CAAb,CAAf;AAKA,OAAO,MAAMK,iBAAiB,GAAGC,KAAK,IAAI;AACxCJ,EAAAA,MAAM,CAACK,YAAP,CAAoBC,OAApB,CAA4BC,GAA5B,CAAgCb,cAAhC,EAAgDC,aAAhD;AACAK,EAAAA,MAAM,CAACK,YAAP,CAAoBG,QAApB,CAA6BD,GAA7B,CAAiCX,eAAjC,EAAkDC,cAAc,CAACO,KAAD,CAAhE;AACD,CAHM;KAAMD,iB;AAKb,eAAeH,MAAf","sourcesContent":["import axios from 'axios';\r\nimport {SERVER_URL, SECRET_KEY} from 'utils/env';\r\nimport requestResolve from './interceptors/request/resolve';\r\nimport requestReject from './interceptors/request/reject';\r\nimport responseResolve from './interceptors/response/resolve';\r\nimport responseReject from './interceptors/response/reject';\r\n\r\nconst timeout = seconds => 1000 * seconds;\r\n\r\nconst server = axios.create({\r\n  baseURL: `${SERVER_URL}/${SECRET_KEY}/api/service`,\r\n  timeout: timeout(5),\r\n});\r\n\r\nexport const ConfigInterceptor = store => {\r\n  server.interceptors.request.use(requestResolve, requestReject);\r\n  server.interceptors.response.use(responseResolve, responseReject(store));\r\n};\r\n\r\nexport default server;\r\n"]},"metadata":{},"sourceType":"module"}