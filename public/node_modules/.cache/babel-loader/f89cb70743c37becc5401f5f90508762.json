{"ast":null,"code":"import axios from'axios';import{SERVER_URL,SECRET_KEY}from'utils/env';import requestResolve from'./interceptors/request/resolve';import requestReject from'./interceptors/request/reject';import responseResolve from'./interceptors/response/resolve';import responseReject from'./interceptors/response/reject';var timeout=function timeout(seconds){return 1000*seconds;};var server=axios.create({baseURL:\"\".concat(SERVER_URL,\"/\").concat(SECRET_KEY,\"/api/service\"),timeout:timeout(5)});export var ConfigInterceptor=function ConfigInterceptor(){server.interceptors.request.use(requestResolve,requestReject);server.interceptors.response.use(responseResolve,responseReject);};export default server;","map":{"version":3,"sources":["C:/Users/Makaru/Documents/React Project/broowingcoffee-web-server/src/network/api/server/index.js"],"names":["axios","SERVER_URL","SECRET_KEY","requestResolve","requestReject","responseResolve","responseReject","timeout","seconds","server","create","baseURL","ConfigInterceptor","interceptors","request","use","response"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAAQC,UAAR,CAAoBC,UAApB,KAAqC,WAArC,CACA,MAAOC,CAAAA,cAAP,KAA2B,gCAA3B,CACA,MAAOC,CAAAA,aAAP,KAA0B,+BAA1B,CACA,MAAOC,CAAAA,eAAP,KAA4B,iCAA5B,CACA,MAAOC,CAAAA,cAAP,KAA2B,gCAA3B,CAEA,GAAMC,CAAAA,OAAO,CAAG,QAAVA,CAAAA,OAAU,CAAAC,OAAO,QAAI,MAAOA,OAAX,EAAvB,CAEA,GAAMC,CAAAA,MAAM,CAAGT,KAAK,CAACU,MAAN,CAAa,CAC1BC,OAAO,WAAKV,UAAL,aAAmBC,UAAnB,gBADmB,CAE1BK,OAAO,CAAEA,OAAO,CAAC,CAAD,CAFU,CAAb,CAAf,CAKA,MAAO,IAAMK,CAAAA,iBAAiB,CAAG,QAApBA,CAAAA,iBAAoB,EAAM,CACrCH,MAAM,CAACI,YAAP,CAAoBC,OAApB,CAA4BC,GAA5B,CAAgCZ,cAAhC,CAAgDC,aAAhD,EACAK,MAAM,CAACI,YAAP,CAAoBG,QAApB,CAA6BD,GAA7B,CAAiCV,eAAjC,CAAkDC,cAAlD,EACD,CAHM,CAKP,cAAeG,CAAAA,MAAf","sourcesContent":["import axios from 'axios';\r\nimport {SERVER_URL, SECRET_KEY} from 'utils/env';\r\nimport requestResolve from './interceptors/request/resolve';\r\nimport requestReject from './interceptors/request/reject';\r\nimport responseResolve from './interceptors/response/resolve';\r\nimport responseReject from './interceptors/response/reject';\r\n\r\nconst timeout = seconds => 1000 * seconds;\r\n\r\nconst server = axios.create({\r\n  baseURL: `${SERVER_URL}/${SECRET_KEY}/api/service`,\r\n  timeout: timeout(5),\r\n});\r\n\r\nexport const ConfigInterceptor = () => {\r\n  server.interceptors.request.use(requestResolve, requestReject);\r\n  server.interceptors.response.use(responseResolve, responseReject);\r\n};\r\n\r\nexport default server;\r\n"]},"metadata":{},"sourceType":"module"}