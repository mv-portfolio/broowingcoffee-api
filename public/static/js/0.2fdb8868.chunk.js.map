{"version":3,"sources":["components/index.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","utils/checker.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js","network/service/server/index.js","hooks/resetPassword.js","hooks/receipt.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator/index.js","../node_modules/regenerator-runtime/runtime.js"],"names":["Button","lazy","Icon","Separator","Text","TextInput","View","Image","_arrayLikeToArray","arr","len","length","i","arr2","Array","_slicedToArray","isArray","Symbol","iterator","Object","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","value","err","o","minLen","n","prototype","toString","call","slice","constructor","name","from","test","TypeError","isTypeof","type","value1","value2","hasUpperCaseLetter","val","hasLowerCaseLetter","hasNumber","hasSymbol","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","error","Promise","then","_asyncToGenerator","fn","self","this","args","arguments","apply","peek","route","config","a","server","get","set","body","put","post","pop","delete","data","resetPasswordInitState","isEncrypt","isLoading","newPassword","confirmPassword","passwordStrength","isMatched","authRequest","resetRequest","messageRequest","email","token","resetPassword","state","action","receiptInitState","payload","receipt","module","exports","runtime","Op","hasOwn","hasOwnProperty","$Symbol","iteratorSymbol","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","obj","defineProperty","enumerable","configurable","writable","wrap","innerFn","outerFn","tryLocsList","protoGenerator","Generator","generator","create","context","Context","_invoke","GenStateSuspendedStart","method","GenStateExecuting","Error","GenStateCompleted","doneResult","delegate","delegateResult","maybeInvokeDelegate","ContinueSentinel","sent","_sent","dispatchException","abrupt","record","tryCatch","GenStateSuspendedYield","makeInvokeMethod","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","AsyncIterator","PromiseImpl","invoke","result","__await","unwrapped","previousPromise","callInvokeWithMethodAndArg","resultName","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","displayName","isGeneratorFunction","genFun","ctor","mark","setPrototypeOf","__proto__","awrap","async","iter","keys","object","reverse","skipTempReset","prev","charAt","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","thrown","delegateYield","regeneratorRuntime","accidentalStrictMode","globalThis","Function"],"mappings":"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","file":"static/js/0.2fdb8868.chunk.js","sourcesContent":["import {lazy} from 'react';\r\n\r\nconst Button = lazy(() => import('./Button'));\r\nconst Dialog = lazy(() => import('./Dialog'));\r\nconst Dropdown = lazy(() => import('./Dropdown'));\r\nconst Icon = lazy(() => import('./Icon'));\r\nconst Modal = lazy(() => import('./Modal'));\r\nconst Progress = lazy(() => import('./Progress'));\r\nconst Separator = lazy(() => import('./Separator'));\r\nconst Text = lazy(() => import('./Text'));\r\nconst TextInput = lazy(() => import('./TextInput'));\r\nconst View = lazy(() => import('./View'));\r\nconst Image = lazy(() => import('./Image'));\r\n\r\nexport {\r\n  Button,\r\n  Dialog,\r\n  Dropdown,\r\n  Icon,\r\n  Image,\r\n  Modal,\r\n  Progress,\r\n  Separator,\r\n  Text,\r\n  TextInput,\r\n  View,\r\n};\r\n","export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}","import arrayWithHoles from \"@babel/runtime/helpers/esm/arrayWithHoles\";\nimport iterableToArrayLimit from \"@babel/runtime/helpers/esm/iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableRest from \"@babel/runtime/helpers/esm/nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","import arrayLikeToArray from \"@babel/runtime/helpers/esm/arrayLikeToArray\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","const isTypeof = (type, value1, value2) => {\r\n  if (type === 'array') {\r\n    return Array.isArray(value1) ? value1 : value2;\r\n  }\r\n  return typeof value1 === type ? value1 : value2;\r\n};\r\nconst isName = val => {\r\n  return /^[a-zA-Z ]*$/.test(val);\r\n};\r\nconst isInteger = val => {\r\n  return /^[0-9]*$/.test(val);\r\n};\r\nconst isDouble = val => {\r\n  return /^\\$?\\d+(,\\d{3})*(\\.\\d*)?$/.test(val);\r\n};\r\nconst isUsername = val => {\r\n  return /^[a-zA-Z0-9]*$/.test(val);\r\n};\r\nconst isEmail = val => {\r\n  return /^(([^<>()[\\]\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@(([^<>()[\\]\\.,;:\\s@\\\"]+\\.)+[^<>()[\\]\\.,;:\\s@\\\"]{2,})$/i.test(\r\n    val,\r\n  );\r\n};\r\nconst isPassword = (val, length) => {\r\n  return (\r\n    hasUpperCaseLetter(val) &&\r\n    hasLowerCaseLetter(val) &&\r\n    hasNumber(val) &&\r\n    val.length >= (length || 6)\r\n  );\r\n};\r\nconst hasUpperCaseLetter = val => {\r\n  return /(?=.*([A-Z]))/.test(val);\r\n};\r\nconst hasLowerCaseLetter = val => {\r\n  return /(?=.*([a-z]))/.test(val);\r\n};\r\nconst hasLetter = val => {\r\n  return /(?=.*([a-zA-Z]))/.test(val);\r\n};\r\nconst hasNumber = val => {\r\n  return /(?=.*[0-9])/.test(val);\r\n};\r\nconst hasSymbol = val => {\r\n  return /(?=.*[!@#$%^&*()_=+-/])/.test(val);\r\n};\r\n\r\nconst isString = value => {\r\n  return typeof value === 'string';\r\n};\r\nconst isArray = value => {\r\n  return Array.isArray(value);\r\n};\r\nconst isObject = value => {\r\n  return typeof value === 'object';\r\n};\r\n\r\nconst isJsonString = value => {\r\n  try {\r\n    const isObject = value.slice(0, 1) === '{' && value.slice(value.length - 1) === '}';\r\n    if (typeof value === 'string' && isObject) {\r\n      JSON.parse(value);\r\n    } else {\r\n      return false;\r\n    }\r\n  } catch (err) {\r\n    return false;\r\n  }\r\n  return true;\r\n};\r\n\r\nexport {\r\n  isTypeof,\r\n  isName,\r\n  isInteger,\r\n  isDouble,\r\n  hasNumber,\r\n  hasLetter,\r\n  isEmail,\r\n  isUsername,\r\n  isPassword,\r\n  isString,\r\n  isJsonString,\r\n  isArray,\r\n  isObject,\r\n  hasSymbol,\r\n  hasUpperCaseLetter,\r\n  hasLowerCaseLetter,\r\n};\r\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}","import {server} from 'network/api';\r\n\r\nasync function peek(route, config) {\r\n  return await server.get(route, config);\r\n}\r\n\r\nasync function set(route, body, config) {\r\n  return await server.put(route, body, config);\r\n}\r\n\r\nasync function push(route, body, config) {\r\n  return await server.post(route, body, config);\r\n}\r\n\r\nasync function pop(route, body, config) {\r\n  return await server.delete(route, {...config, data: body});\r\n}\r\n\r\nexport {peek, set, push, pop};\r\n","import {isObject, isTypeof} from 'utils/checker';\r\n\r\nexport const resetPasswordInitState = {\r\n  isEncrypt: true,\r\n  isLoading: false,\r\n  newPassword: '',\r\n  confirmPassword: '',\r\n  passwordStrength: 0,\r\n  isMatched: false,\r\n  authRequest: 'pending',\r\n  resetRequest: 'pending',\r\n  messageRequest: '',\r\n  email: '',\r\n  token: '',\r\n};\r\n\r\nexport default function resetPassword(state = resetPasswordInitState, action) {\r\n  switch (action.type) {\r\n    case 'set':\r\n      return {\r\n        isEncrypt: isTypeof('boolean', action.isEncrypt, state.isEncrypt),\r\n        isMatched: isTypeof('boolean', action.isMatched, state.isMatched),\r\n        isLoading: isTypeof('boolean', action.isLoading, state.isLoading),\r\n        newPassword: isTypeof('string', action.newPassword, state.newPassword),\r\n        messageRequest: isTypeof('string', action.messageRequest, state.messageRequest),\r\n        email: isTypeof('string', action.email, state.email),\r\n        token: isTypeof('string', action.token, state.token),\r\n        passwordStrength: isTypeof(\r\n          'number',\r\n          action.passwordStrength,\r\n          state.passwordStrength,\r\n        ),\r\n        confirmPassword: isTypeof(\r\n          'string',\r\n          action.confirmPassword,\r\n          state.confirmPassword,\r\n        ),\r\n        authRequest: isTypeof('string', action.authRequest, state.authRequest),\r\n        resetRequest: isTypeof('string', action.resetRequest, state.resetRequest),\r\n      };\r\n\r\n    case 'clear':\r\n      return resetPasswordInitState;\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import {isTypeof} from 'utils/checker';\r\n\r\nexport const receiptInitState = {\r\n  authRequest: 'pending',\r\n  payload: {},\r\n};\r\n\r\nexport default function receipt(state = receiptInitState, action) {\r\n  switch (action.type) {\r\n    case 'set':\r\n      return {\r\n        authRequest: isTypeof('string', action.authRequest, state.authRequest),\r\n        payload: isTypeof('object', action.payload, state.payload),\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","module.exports = require(\"regenerator-runtime\");\n","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar runtime = (function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function define(obj, key, value) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n    return obj[key];\n  }\n  try {\n    // IE 8 has a broken Object.defineProperty that only works on DOM objects.\n    define({}, \"\");\n  } catch (err) {\n    define = function(obj, key, value) {\n      return obj[key] = value;\n    };\n  }\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  exports.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  define(IteratorPrototype, iteratorSymbol, function () {\n    return this;\n  });\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = GeneratorFunctionPrototype;\n  define(Gp, \"constructor\", GeneratorFunctionPrototype);\n  define(GeneratorFunctionPrototype, \"constructor\", GeneratorFunction);\n  GeneratorFunction.displayName = define(\n    GeneratorFunctionPrototype,\n    toStringTagSymbol,\n    \"GeneratorFunction\"\n  );\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      define(prototype, method, function(arg) {\n        return this._invoke(method, arg);\n      });\n    });\n  }\n\n  exports.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  exports.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      define(genFun, toStringTagSymbol, \"GeneratorFunction\");\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  exports.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return PromiseImpl.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return PromiseImpl.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new PromiseImpl(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  define(AsyncIterator.prototype, asyncIteratorSymbol, function () {\n    return this;\n  });\n  exports.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  exports.async = function(innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    if (PromiseImpl === void 0) PromiseImpl = Promise;\n\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList),\n      PromiseImpl\n    );\n\n    return exports.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        // Note: [\"return\"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator[\"return\"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  define(Gp, toStringTagSymbol, \"Generator\");\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  define(Gp, iteratorSymbol, function() {\n    return this;\n  });\n\n  define(Gp, \"toString\", function() {\n    return \"[object Generator]\";\n  });\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  exports.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n\n  // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n  return exports;\n\n}(\n  // If this script is executing as a CommonJS module, use module.exports\n  // as the regeneratorRuntime namespace. Otherwise create a new empty\n  // object. Either way, the resulting object will be used to initialize\n  // the regeneratorRuntime variable at the top of this file.\n  typeof module === \"object\" ? module.exports : {}\n));\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, in modern engines\n  // we can explicitly access globalThis. In older engines we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  if (typeof globalThis === \"object\") {\n    globalThis.regeneratorRuntime = runtime;\n  } else {\n    Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n  }\n}\n"],"sourceRoot":""}