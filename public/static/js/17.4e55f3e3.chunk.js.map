{"version":3,"sources":["pages/ResetPassword/index.js","pages/ResetPassword/.module.css"],"names":["HomePage","token","useParams","history","useHistory","useReducer","resetPasswordReducer","resetPasswordInitState","state","setState","useEffect","server","peek","headers","then","res","email","status","type","authRequest","catch","err","strength","val","hasUpperCaseLetter","length","hasLowerCaseLetter","hasSymbol","hasNumber","onChangeText","component","confirmPassword","isMatched","newPassword","passwordStrength","document","title","style","styles","mainPane","topPane","headerPane","vertical","subtitle","bodyPane","skinStyle","inputSkin","placeholder","showIndicator","indicatorProgress","isTextEncrypt","isEncrypt","value","text","onTextEncrypt","button","isLoading","onClick","push","setTimeout","replace","includes","resetRequest","messageRequest","bottomPane","errorPane","errorTitle","infoPane","infoTitle","module","exports"],"mappings":"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","file":"static/js/17.4e55f3e3.chunk.js","sourcesContent":["import {useEffect, useReducer, useState} from 'react';\r\nimport {useHistory, useParams} from 'react-router-dom';\r\nimport {ErrorPage, LoadingPage, SuccessPage} from 'pages';\r\nimport {Text, TextInput, View, Separator, Button} from 'components';\r\nimport styles from './.module.css';\r\nimport {resetPassword as resetPasswordReducer, resetPasswordInitState} from 'hooks';\r\nimport {\r\n  hasLowerCaseLetter,\r\n  hasNumber,\r\n  hasSymbol,\r\n  hasUpperCaseLetter,\r\n} from 'utils/checker';\r\nimport {server} from 'network/service';\r\n\r\nexport default function HomePage() {\r\n  const {token} = useParams();\r\n  const history = useHistory();\r\n  const [state, setState] = useReducer(resetPasswordReducer, resetPasswordInitState);\r\n\r\n  const screenInitListener = () => {\r\n    server\r\n      .peek('/reset-password-auth', {\r\n        headers: {'reset-auth-token': token},\r\n      })\r\n      .then(res => {\r\n        const {\r\n          res: {email, token},\r\n          status,\r\n        } = res;\r\n        if (status) {\r\n          setState({type: 'set', authRequest: 'success', email, token});\r\n        }\r\n      })\r\n      .catch(err => {\r\n        setState({type: 'set', authRequest: 'failed'});\r\n      });\r\n  };\r\n  useEffect(screenInitListener, []);\r\n\r\n  const strength = val => {\r\n    let strength = 0;\r\n    if (hasUpperCaseLetter(val)) {\r\n      if (val.length > 2) {\r\n        strength += 15;\r\n      }\r\n      strength += 10;\r\n    }\r\n    if (hasLowerCaseLetter(val)) {\r\n      if (val.length > 4) {\r\n        strength += 15;\r\n      }\r\n      strength += 10;\r\n    }\r\n    if (hasSymbol(val)) {\r\n      if (val.length > 6) {\r\n        strength += 15;\r\n      }\r\n      strength += 10;\r\n    }\r\n    if (hasNumber(val)) {\r\n      if (val.length > 8) {\r\n        strength += 15;\r\n      }\r\n      strength += 10;\r\n    }\r\n    return strength;\r\n  };\r\n  const onChangeText = (component, val) => {\r\n    if (component === 'new-password') {\r\n      setState({\r\n        type: 'set',\r\n        newPassword: val,\r\n        passwordStrength: strength(val),\r\n        isMatched: val === state.confirmPassword,\r\n      });\r\n      return;\r\n    }\r\n    if (component === 'confirm-password') {\r\n      setState({\r\n        type: 'set',\r\n        confirmPassword: val,\r\n        isMatched: val === state.newPassword,\r\n      });\r\n      return;\r\n    }\r\n  };\r\n\r\n  const onClickChange = () => {\r\n    if (!state.isMatched) {\r\n      setState({\r\n        type: 'set',\r\n        resetRequest: 'failed',\r\n        messageRequest: 'Passwords does not matched',\r\n      });\r\n      return;\r\n    }\r\n\r\n    setState({type: 'set', isLoading: true});\r\n    server\r\n      .push(\r\n        '/reset-password-decoder',\r\n        {\r\n          email: state.email,\r\n          newPassword: state.newPassword,\r\n        },\r\n        {headers: {'reset-auth-token': state.token}},\r\n      )\r\n      .then(res => {\r\n        setState({type: 'set', authRequest: 'success-done', isLoading: false});\r\n        setTimeout(() => {\r\n          history.replace('/');\r\n        }, 4000);\r\n      })\r\n      .catch(({err}) => {\r\n        setState({type: 'set', isLoading: false});\r\n        if (err.includes('Password')) {\r\n          setState({type: 'set', resetRequest: 'failed', messageRequest: err});\r\n          return;\r\n        }\r\n        setState({type: 'set', authRequest: 'failed'});\r\n      });\r\n  };\r\n\r\n  if (state.authRequest === 'success') {\r\n    document.title = 'Broowing Coffee | New Password';\r\n    return (\r\n      <View style={styles.mainPane}>\r\n        <View style={styles.topPane}>\r\n          <View style={styles.headerPane}>\r\n            <Text style={styles.title}>New Password</Text>\r\n            <Separator vertical={0.25} />\r\n            <Text style={styles.subtitle}>\r\n              Please be sure, the password you enter was not leaked to anyone\r\n            </Text>\r\n          </View>\r\n        </View>\r\n        <View style={styles.bodyPane}>\r\n          <TextInput\r\n            skinStyle={styles.inputSkin}\r\n            placeholder='New Password'\r\n            showIndicator={true}\r\n            indicatorProgress={state.passwordStrength}\r\n            isTextEncrypt={state.isEncrypt}\r\n            value={state.newPassword}\r\n            onChangeText={text => onChangeText('new-password', text)}\r\n          />\r\n          <Separator vertical={0.5} />\r\n          <TextInput\r\n            skinStyle={styles.inputSkin}\r\n            placeholder='Confirm Password'\r\n            isTextEncrypt={state.isEncrypt}\r\n            onTextEncrypt={() => setState({type: 'set', isEncrypt: !state.isEncrypt})}\r\n            value={state.confirmPassword}\r\n            onChangeText={text => onChangeText('confirm-password', text)}\r\n          />\r\n          <Separator vertical={1} />\r\n          <Button\r\n            style={styles.button}\r\n            isLoading={state.isLoading}\r\n            title='Change'\r\n            onClick={onClickChange}\r\n          />\r\n        </View>\r\n        <View style={styles.bottomPane}>\r\n          {state.resetRequest === 'failed' && (\r\n            <View style={styles.errorPane}>\r\n              <Text style={styles.errorTitle}>{state.messageRequest}</Text>\r\n            </View>\r\n          )}\r\n          {state.resetRequest === 'success' && (\r\n            <View style={styles.infoPane}>\r\n              <Text style={styles.infoTitle}>{state.messageRequest}</Text>\r\n            </View>\r\n          )}\r\n        </View>\r\n      </View>\r\n    );\r\n  }\r\n\r\n  if (state.authRequest === 'success-done') {\r\n    document.title = 'Broowing Coffee | Success';\r\n    return (\r\n      <SuccessPage\r\n        title='Password Saved'\r\n        subtitle='You may now use the new password you entered'\r\n      />\r\n    );\r\n  }\r\n\r\n  if (state.authRequest === 'failed') {\r\n    document.title = 'Broowing Coffee | Error';\r\n    return <ErrorPage />;\r\n  }\r\n\r\n  return <LoadingPage />;\r\n}\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainPane\":\"_mainPane__2Lh4m\",\"topPane\":\"_topPane__GKrns\",\"headerPane\":\"_headerPane__1vBz_\",\"title\":\"_title__2sUBA\",\"subtitle\":\"_subtitle__3T_Ue\",\"bodyPane\":\"_bodyPane__fR2y9\",\"inputSkin\":\"_inputSkin__ZF1LH\",\"button\":\"_button__1OsEj\",\"bottomPane\":\"_bottomPane__3Zf66\",\"errorPane\":\"_errorPane__2uG13\",\"errorTitle\":\"_errorTitle__3jxXE\",\"infoPane\":\"_infoPane__5y4P8\",\"infoTitle\":\"_infoTitle__2kG6H\"};"],"sourceRoot":""}